{
  "hash": "b5f6d3612b6fda5166cc44532e8cb614",
  "result": {
    "markdown": "---\ntitle: 'Project: Analyzing Trends in Gun Sales Data across the U.S.'\nsubtitle: An project for Udacity's Nanodegree\nauthor: Edun Joshua\ndate: '2022-10-05'\ntoc: true\ncategories:\n  - python\n  - data wrangling\nimage: dashboard.jpg\n---\n\n## Introduction\n\nThe data comes from the FBI's National Instant Criminal Background Check System. The NICS is used by to determine whether a prospective buyer is eligible to buy firearms or explosives. Gun shops call into this system to ensure that each customer does not have a criminal record or isn't otherwise ineligible to make a purchase. The data has been supplemented with state level data from census.gov.\n\n> Mandated by the Brady Handgun Violence Prevention Act of 1993 and launched by the FBI on November 30, 1998, NICS is used by Federal Firearms Licensees (FFLs) to instantly determine whether a prospective buyer is eligible to buy firearms or explosives. Before ringing up the sale, cashiers call in a check to the FBI or to other designated agencies to ensure that each customer does not have a criminal record or isn't otherwise ineligible to make a purchase. More than 100 million such checks have been made in the last decade, leading to more than 700,000 denials.\n\nThese statistics represent the number of firearm background checks initiated through the NICS. They do not represent the number of firearms sold. According to The Trace, 2015: The FBI's background check numbers come with caveats: As seen in the late February-early March 2014 bubble, many checks are for concealed carry permits, not actual gun sales. Kentucky runs a new check on each concealed carry license holder each month. And of course, the FBI's numbers don't include private gun sales, many of which do not require a background check. Despite those vagaries, the FBI's NICS numbers are widely accepted as **the best proxy for total gun sales** in a given time period.\n\nIn 2015, New York Times ran a similar analysis with the data and estimated sales from background checks with a method suggested by a researcher.\n\nAccording to them:\n\n> To convert background checks into estimated sales, we relied on a method suggested in the Small Arms Survey by Jurgen Brauer, a professor at Georgia Regents University. Each long gun and handgun check was counted as 1.1 sales. Each multiple-gun check was counted as two sales. Permit checks and other types of checks were omitted. The multiplier is an estimate based on Mr. Brauer's interviews with gun shop owners.\n\nThis is the method I applied in this analysis.\n\nThe NICS is in a wide format and contains a total of 23 variables, out of which I deem only 5 is relevant to this analysis:\n\n-   month (monthly data from November 1998 to September 2017)\n\n-   state (55 U.S. states and offshore territories)\n\n-   handgun (number of check calls)\n\n-   long-gun (number of check calls)\n\n-   multiple (number of check calls)\n\nThe census data is a wide-table format data with 66 variables measuring quantities for 50 U.S. states. I have selected only 18 variables that I deem relevant to this analysis. The starred variables are just a few of the variables that are present in the raw data that I will not include in this analysis.\n\n| s/n | Variable                                                                    |\n|------------------------------------|------------------------------------|\n| 1   | Population estimates, July 1, 2016, (V2016)                                 |\n| 2   | Persons under 18 years, percent, July 1, 2016, (V2016)                      |\n| 3   | Persons 65 years and over, percent, July 1, 2016,(V2016)                    |\n| 4   | Female persons, percent, July 1, 2016, (V2016)                              |\n| 5   | White alone, percent, July 1, 2016, (V2016)                                 |\n| 6   | Black or African American alone, percent, July 1, 2016, (V2016)             |\n| 7   | Asian alone, percent, July 1, 2016, (V2016)                                 |\n| 8   | Median value of owner-occupied housing units, 2011-2015                     |\n| 9   | Median gross rent, 2011-2015                                                |\n| 10  | Persons per household, 2011-2015                                            |\n| 11  | High school graduate or higher, percent of persons age 25 years+, 2011-2015 |\n| 12  | Bachelor's degree or higher, percent of persons age 25 years+, 2011-2015    |\n| 13  | Persons without health insurance, under age 65 years, percent               |\n| 14  | Median household income (in 2015 dollars), 2011-2015                        |\n| 15  | Per capita income in past 12 months (in 2015 dollars), 2011-2015            |\n| 16  | Persons in poverty, percent                                                 |\n| 17  | All firms, 2012                                                             |\n| \\*  | Persons under 5 years, percent, July 1, 2016, (V2016)                       |\n| \\*  | Minority-owned firms, 2012                                                  |\n| \\*  | Population per square mile, 2010                                            |\n| \\*  | Total employer establishments, 2015                                         |\n| \\*  | Total employment, 2015                                                      |\n| \\*  | Total annual payroll, 2015 (\\$1,000)                                        |\n| \\*  | Total employment, percent change, 2014-2015                                 |\n| \\*  | Total nonemployer establishments, 2015                                      |\n\nThe 18th variable is state but in the raw data, it would have to be created by transposing the dataframe. The starred variables are just some of the ones I deem irrelevant.\n\n## Research Questions\n\n*In this analysis, I will answer the following research questions*:\n\n> -   *How many guns were sold in the U.S. in selected years?*\n> -   *What kind of gun was bought the most in those years?*\n> -   *What are the overall monthly trends of gun purchases in those years?*\n\n> -   *What are the top 5 states in terms of gun purchases in the U.S. in those years?*\n>\n> -   *What are the most bought gun types in those states?*\n>\n> -   *What kind of gun was bought the most in one of those states?*\n>\n> -   *What are the overall monthly trends of gun purchases in those states?*\n>\n> -   *Which states had the highest growth in gun sales over the span of a decade?*\n\n## Data Wrangling (a)\n\n### General Properties\n\n*Loading and inspecting the census data*\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Importing packages.\nimport pandas as pd, numpy as np\nimport matplotlib.pyplot as plt, seaborn as sns\n#% matplotlib inline\n\ndf_census_raw = pd.read_csv('Data/US_Census_Data.csv')\ndf_census_raw.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Fact</th>\n      <th>Fact Note</th>\n      <th>Alabama</th>\n      <th>Alaska</th>\n      <th>Arizona</th>\n      <th>Arkansas</th>\n      <th>California</th>\n      <th>Colorado</th>\n      <th>Connecticut</th>\n      <th>Delaware</th>\n      <th>...</th>\n      <th>South Dakota</th>\n      <th>Tennessee</th>\n      <th>Texas</th>\n      <th>Utah</th>\n      <th>Vermont</th>\n      <th>Virginia</th>\n      <th>Washington</th>\n      <th>West Virginia</th>\n      <th>Wisconsin</th>\n      <th>Wyoming</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Population estimates, July 1, 2016,  (V2016)</td>\n      <td>NaN</td>\n      <td>4,863,300</td>\n      <td>741,894</td>\n      <td>6,931,071</td>\n      <td>2,988,248</td>\n      <td>39,250,017</td>\n      <td>5,540,545</td>\n      <td>3,576,452</td>\n      <td>952,065</td>\n      <td>...</td>\n      <td>865454</td>\n      <td>6651194</td>\n      <td>27,862,596</td>\n      <td>3,051,217</td>\n      <td>624,594</td>\n      <td>8,411,808</td>\n      <td>7,288,000</td>\n      <td>1,831,102</td>\n      <td>5,778,708</td>\n      <td>585,501</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Population estimates base, April 1, 2010,  (V2...</td>\n      <td>NaN</td>\n      <td>4,780,131</td>\n      <td>710,249</td>\n      <td>6,392,301</td>\n      <td>2,916,025</td>\n      <td>37,254,522</td>\n      <td>5,029,324</td>\n      <td>3,574,114</td>\n      <td>897,936</td>\n      <td>...</td>\n      <td>814195</td>\n      <td>6346298</td>\n      <td>25,146,100</td>\n      <td>2,763,888</td>\n      <td>625,741</td>\n      <td>8,001,041</td>\n      <td>6,724,545</td>\n      <td>1,853,011</td>\n      <td>5,687,289</td>\n      <td>563,767</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Population, percent change - April 1, 2010 (es...</td>\n      <td>NaN</td>\n      <td>1.70%</td>\n      <td>4.50%</td>\n      <td>8.40%</td>\n      <td>2.50%</td>\n      <td>5.40%</td>\n      <td>10.20%</td>\n      <td>0.10%</td>\n      <td>6.00%</td>\n      <td>...</td>\n      <td>0.063</td>\n      <td>0.048</td>\n      <td>10.80%</td>\n      <td>10.40%</td>\n      <td>-0.20%</td>\n      <td>5.10%</td>\n      <td>8.40%</td>\n      <td>-1.20%</td>\n      <td>1.60%</td>\n      <td>3.90%</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Population, Census, April 1, 2010</td>\n      <td>NaN</td>\n      <td>4,779,736</td>\n      <td>710,231</td>\n      <td>6,392,017</td>\n      <td>2,915,918</td>\n      <td>37,253,956</td>\n      <td>5,029,196</td>\n      <td>3,574,097</td>\n      <td>897,934</td>\n      <td>...</td>\n      <td>814180</td>\n      <td>6346105</td>\n      <td>25,145,561</td>\n      <td>2,763,885</td>\n      <td>625,741</td>\n      <td>8,001,024</td>\n      <td>6,724,540</td>\n      <td>1,852,994</td>\n      <td>5,686,986</td>\n      <td>563,626</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Persons under 5 years, percent, July 1, 2016, ...</td>\n      <td>NaN</td>\n      <td>6.00%</td>\n      <td>7.30%</td>\n      <td>6.30%</td>\n      <td>6.40%</td>\n      <td>6.30%</td>\n      <td>6.10%</td>\n      <td>5.20%</td>\n      <td>5.80%</td>\n      <td>...</td>\n      <td>0.071</td>\n      <td>0.061</td>\n      <td>7.20%</td>\n      <td>8.30%</td>\n      <td>4.90%</td>\n      <td>6.10%</td>\n      <td>6.20%</td>\n      <td>5.50%</td>\n      <td>5.80%</td>\n      <td>6.50%</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 52 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# shape of the dataframe\ndf_census_raw.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n(85, 52)\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# viewing all columns in the dataframe\ndf_census_raw.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nIndex(['Fact', 'Fact Note', 'Alabama', 'Alaska', 'Arizona', 'Arkansas',\n       'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida',\n       'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas',\n       'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts',\n       'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana',\n       'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n       'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma',\n       'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina',\n       'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia',\n       'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'],\n      dtype='object')\n```\n:::\n:::\n\n\n#### Dropping Irrelevant Columns\n\nIn this section, I will drop all irrelevant columns from the census dataset, reshape the dataframe and then rename columns for clarity\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# dropping the 'Fact Note' column\ndf_census_raw.drop('Fact Note', axis=1, inplace=True)\ndf_census_raw.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Fact</th>\n      <th>Alabama</th>\n      <th>Alaska</th>\n      <th>Arizona</th>\n      <th>Arkansas</th>\n      <th>California</th>\n      <th>Colorado</th>\n      <th>Connecticut</th>\n      <th>Delaware</th>\n      <th>Florida</th>\n      <th>...</th>\n      <th>South Dakota</th>\n      <th>Tennessee</th>\n      <th>Texas</th>\n      <th>Utah</th>\n      <th>Vermont</th>\n      <th>Virginia</th>\n      <th>Washington</th>\n      <th>West Virginia</th>\n      <th>Wisconsin</th>\n      <th>Wyoming</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Population estimates, July 1, 2016,  (V2016)</td>\n      <td>4,863,300</td>\n      <td>741,894</td>\n      <td>6,931,071</td>\n      <td>2,988,248</td>\n      <td>39,250,017</td>\n      <td>5,540,545</td>\n      <td>3,576,452</td>\n      <td>952,065</td>\n      <td>20,612,439</td>\n      <td>...</td>\n      <td>865454</td>\n      <td>6651194</td>\n      <td>27,862,596</td>\n      <td>3,051,217</td>\n      <td>624,594</td>\n      <td>8,411,808</td>\n      <td>7,288,000</td>\n      <td>1,831,102</td>\n      <td>5,778,708</td>\n      <td>585,501</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Population estimates base, April 1, 2010,  (V2...</td>\n      <td>4,780,131</td>\n      <td>710,249</td>\n      <td>6,392,301</td>\n      <td>2,916,025</td>\n      <td>37,254,522</td>\n      <td>5,029,324</td>\n      <td>3,574,114</td>\n      <td>897,936</td>\n      <td>18,804,592</td>\n      <td>...</td>\n      <td>814195</td>\n      <td>6346298</td>\n      <td>25,146,100</td>\n      <td>2,763,888</td>\n      <td>625,741</td>\n      <td>8,001,041</td>\n      <td>6,724,545</td>\n      <td>1,853,011</td>\n      <td>5,687,289</td>\n      <td>563,767</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Population, percent change - April 1, 2010 (es...</td>\n      <td>1.70%</td>\n      <td>4.50%</td>\n      <td>8.40%</td>\n      <td>2.50%</td>\n      <td>5.40%</td>\n      <td>10.20%</td>\n      <td>0.10%</td>\n      <td>6.00%</td>\n      <td>9.60%</td>\n      <td>...</td>\n      <td>0.063</td>\n      <td>0.048</td>\n      <td>10.80%</td>\n      <td>10.40%</td>\n      <td>-0.20%</td>\n      <td>5.10%</td>\n      <td>8.40%</td>\n      <td>-1.20%</td>\n      <td>1.60%</td>\n      <td>3.90%</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Population, Census, April 1, 2010</td>\n      <td>4,779,736</td>\n      <td>710,231</td>\n      <td>6,392,017</td>\n      <td>2,915,918</td>\n      <td>37,253,956</td>\n      <td>5,029,196</td>\n      <td>3,574,097</td>\n      <td>897,934</td>\n      <td>18,801,310</td>\n      <td>...</td>\n      <td>814180</td>\n      <td>6346105</td>\n      <td>25,145,561</td>\n      <td>2,763,885</td>\n      <td>625,741</td>\n      <td>8,001,024</td>\n      <td>6,724,540</td>\n      <td>1,852,994</td>\n      <td>5,686,986</td>\n      <td>563,626</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Persons under 5 years, percent, July 1, 2016, ...</td>\n      <td>6.00%</td>\n      <td>7.30%</td>\n      <td>6.30%</td>\n      <td>6.40%</td>\n      <td>6.30%</td>\n      <td>6.10%</td>\n      <td>5.20%</td>\n      <td>5.80%</td>\n      <td>5.50%</td>\n      <td>...</td>\n      <td>0.071</td>\n      <td>0.061</td>\n      <td>7.20%</td>\n      <td>8.30%</td>\n      <td>4.90%</td>\n      <td>6.10%</td>\n      <td>6.20%</td>\n      <td>5.50%</td>\n      <td>5.80%</td>\n      <td>6.50%</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 51 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# reshaping the dataframe\ndf_T = df_census_raw.transpose(copy=False)\n```\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# observing the result\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>75</th>\n      <th>76</th>\n      <th>77</th>\n      <th>78</th>\n      <th>79</th>\n      <th>80</th>\n      <th>81</th>\n      <th>82</th>\n      <th>83</th>\n      <th>84</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Fact</th>\n      <td>Population estimates, July 1, 2016,  (V2016)</td>\n      <td>Population estimates base, April 1, 2010,  (V2...</td>\n      <td>Population, percent change - April 1, 2010 (es...</td>\n      <td>Population, Census, April 1, 2010</td>\n      <td>Persons under 5 years, percent, July 1, 2016, ...</td>\n      <td>Persons under 5 years, percent, April 1, 2010</td>\n      <td>Persons under 18 years, percent, July 1, 2016,...</td>\n      <td>Persons under 18 years, percent, April 1, 2010</td>\n      <td>Persons 65 years and over, percent,  July 1, 2...</td>\n      <td>Persons 65 years and over, percent, April 1, 2010</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>Value Flags</td>\n      <td>-</td>\n      <td>D</td>\n      <td>F</td>\n      <td>FN</td>\n      <td>NaN</td>\n      <td>S</td>\n      <td>X</td>\n      <td>Z</td>\n    </tr>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>4,780,131</td>\n      <td>1.70%</td>\n      <td>4,779,736</td>\n      <td>6.00%</td>\n      <td>6.40%</td>\n      <td>22.60%</td>\n      <td>23.70%</td>\n      <td>16.10%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>710,249</td>\n      <td>4.50%</td>\n      <td>710,231</td>\n      <td>7.30%</td>\n      <td>7.60%</td>\n      <td>25.20%</td>\n      <td>26.40%</td>\n      <td>10.40%</td>\n      <td>7.70%</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6,392,301</td>\n      <td>8.40%</td>\n      <td>6,392,017</td>\n      <td>6.30%</td>\n      <td>7.10%</td>\n      <td>23.50%</td>\n      <td>25.50%</td>\n      <td>16.90%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>2,916,025</td>\n      <td>2.50%</td>\n      <td>2,915,918</td>\n      <td>6.40%</td>\n      <td>6.80%</td>\n      <td>23.60%</td>\n      <td>24.40%</td>\n      <td>16.30%</td>\n      <td>14.40%</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 85 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# checking out the new shape\ndf_T.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n(51, 85)\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# selecting the columns of interest\ndf_T = df_T.iloc[:, 0:65]\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>55</th>\n      <th>56</th>\n      <th>57</th>\n      <th>58</th>\n      <th>59</th>\n      <th>60</th>\n      <th>61</th>\n      <th>62</th>\n      <th>63</th>\n      <th>64</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Fact</th>\n      <td>Population estimates, July 1, 2016,  (V2016)</td>\n      <td>Population estimates base, April 1, 2010,  (V2...</td>\n      <td>Population, percent change - April 1, 2010 (es...</td>\n      <td>Population, Census, April 1, 2010</td>\n      <td>Persons under 5 years, percent, July 1, 2016, ...</td>\n      <td>Persons under 5 years, percent, April 1, 2010</td>\n      <td>Persons under 18 years, percent, July 1, 2016,...</td>\n      <td>Persons under 18 years, percent, April 1, 2010</td>\n      <td>Persons 65 years and over, percent,  July 1, 2...</td>\n      <td>Persons 65 years and over, percent, April 1, 2010</td>\n      <td>...</td>\n      <td>All firms, 2012</td>\n      <td>Men-owned firms, 2012</td>\n      <td>Women-owned firms, 2012</td>\n      <td>Minority-owned firms, 2012</td>\n      <td>Nonminority-owned firms, 2012</td>\n      <td>Veteran-owned firms, 2012</td>\n      <td>Nonveteran-owned firms, 2012</td>\n      <td>Population per square mile, 2010</td>\n      <td>Land area in square miles, 2010</td>\n      <td>FIPS Code</td>\n    </tr>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>4,780,131</td>\n      <td>1.70%</td>\n      <td>4,779,736</td>\n      <td>6.00%</td>\n      <td>6.40%</td>\n      <td>22.60%</td>\n      <td>23.70%</td>\n      <td>16.10%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>374,153</td>\n      <td>203,604</td>\n      <td>137,630</td>\n      <td>92,219</td>\n      <td>272,651</td>\n      <td>41,943</td>\n      <td>316,984</td>\n      <td>94.4</td>\n      <td>50,645.33</td>\n      <td>\"01\"</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>710,249</td>\n      <td>4.50%</td>\n      <td>710,231</td>\n      <td>7.30%</td>\n      <td>7.60%</td>\n      <td>25.20%</td>\n      <td>26.40%</td>\n      <td>10.40%</td>\n      <td>7.70%</td>\n      <td>...</td>\n      <td>68,032</td>\n      <td>35,402</td>\n      <td>22,141</td>\n      <td>13,688</td>\n      <td>51,147</td>\n      <td>7,953</td>\n      <td>56,091</td>\n      <td>1.2</td>\n      <td>570,640.95</td>\n      <td>\"02\"</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6,392,301</td>\n      <td>8.40%</td>\n      <td>6,392,017</td>\n      <td>6.30%</td>\n      <td>7.10%</td>\n      <td>23.50%</td>\n      <td>25.50%</td>\n      <td>16.90%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>499,926</td>\n      <td>245,243</td>\n      <td>182,425</td>\n      <td>135,313</td>\n      <td>344,981</td>\n      <td>46,780</td>\n      <td>427,582</td>\n      <td>56.3</td>\n      <td>113,594.08</td>\n      <td>\"04\"</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>2,916,025</td>\n      <td>2.50%</td>\n      <td>2,915,918</td>\n      <td>6.40%</td>\n      <td>6.80%</td>\n      <td>23.60%</td>\n      <td>24.40%</td>\n      <td>16.30%</td>\n      <td>14.40%</td>\n      <td>...</td>\n      <td>231,959</td>\n      <td>123,158</td>\n      <td>75,962</td>\n      <td>35,982</td>\n      <td>189,029</td>\n      <td>25,915</td>\n      <td>192,988</td>\n      <td>56</td>\n      <td>52,035.48</td>\n      <td>\"05\"</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 65 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\ncolumns = df_T.iloc[0, :]\ndf_T.rename(columns=columns, inplace = True)\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Population estimates, July 1, 2016,  (V2016)</th>\n      <th>Population estimates base, April 1, 2010,  (V2016)</th>\n      <th>Population, percent change - April 1, 2010 (estimates base) to July 1, 2016,  (V2016)</th>\n      <th>Population, Census, April 1, 2010</th>\n      <th>Persons under 5 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 5 years, percent, April 1, 2010</th>\n      <th>Persons under 18 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 18 years, percent, April 1, 2010</th>\n      <th>Persons 65 years and over, percent,  July 1, 2016,  (V2016)</th>\n      <th>Persons 65 years and over, percent, April 1, 2010</th>\n      <th>...</th>\n      <th>All firms, 2012</th>\n      <th>Men-owned firms, 2012</th>\n      <th>Women-owned firms, 2012</th>\n      <th>Minority-owned firms, 2012</th>\n      <th>Nonminority-owned firms, 2012</th>\n      <th>Veteran-owned firms, 2012</th>\n      <th>Nonveteran-owned firms, 2012</th>\n      <th>Population per square mile, 2010</th>\n      <th>Land area in square miles, 2010</th>\n      <th>FIPS Code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Fact</th>\n      <td>Population estimates, July 1, 2016,  (V2016)</td>\n      <td>Population estimates base, April 1, 2010,  (V2...</td>\n      <td>Population, percent change - April 1, 2010 (es...</td>\n      <td>Population, Census, April 1, 2010</td>\n      <td>Persons under 5 years, percent, July 1, 2016, ...</td>\n      <td>Persons under 5 years, percent, April 1, 2010</td>\n      <td>Persons under 18 years, percent, July 1, 2016,...</td>\n      <td>Persons under 18 years, percent, April 1, 2010</td>\n      <td>Persons 65 years and over, percent,  July 1, 2...</td>\n      <td>Persons 65 years and over, percent, April 1, 2010</td>\n      <td>...</td>\n      <td>All firms, 2012</td>\n      <td>Men-owned firms, 2012</td>\n      <td>Women-owned firms, 2012</td>\n      <td>Minority-owned firms, 2012</td>\n      <td>Nonminority-owned firms, 2012</td>\n      <td>Veteran-owned firms, 2012</td>\n      <td>Nonveteran-owned firms, 2012</td>\n      <td>Population per square mile, 2010</td>\n      <td>Land area in square miles, 2010</td>\n      <td>FIPS Code</td>\n    </tr>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>4,780,131</td>\n      <td>1.70%</td>\n      <td>4,779,736</td>\n      <td>6.00%</td>\n      <td>6.40%</td>\n      <td>22.60%</td>\n      <td>23.70%</td>\n      <td>16.10%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>374,153</td>\n      <td>203,604</td>\n      <td>137,630</td>\n      <td>92,219</td>\n      <td>272,651</td>\n      <td>41,943</td>\n      <td>316,984</td>\n      <td>94.4</td>\n      <td>50,645.33</td>\n      <td>\"01\"</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>710,249</td>\n      <td>4.50%</td>\n      <td>710,231</td>\n      <td>7.30%</td>\n      <td>7.60%</td>\n      <td>25.20%</td>\n      <td>26.40%</td>\n      <td>10.40%</td>\n      <td>7.70%</td>\n      <td>...</td>\n      <td>68,032</td>\n      <td>35,402</td>\n      <td>22,141</td>\n      <td>13,688</td>\n      <td>51,147</td>\n      <td>7,953</td>\n      <td>56,091</td>\n      <td>1.2</td>\n      <td>570,640.95</td>\n      <td>\"02\"</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6,392,301</td>\n      <td>8.40%</td>\n      <td>6,392,017</td>\n      <td>6.30%</td>\n      <td>7.10%</td>\n      <td>23.50%</td>\n      <td>25.50%</td>\n      <td>16.90%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>499,926</td>\n      <td>245,243</td>\n      <td>182,425</td>\n      <td>135,313</td>\n      <td>344,981</td>\n      <td>46,780</td>\n      <td>427,582</td>\n      <td>56.3</td>\n      <td>113,594.08</td>\n      <td>\"04\"</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>2,916,025</td>\n      <td>2.50%</td>\n      <td>2,915,918</td>\n      <td>6.40%</td>\n      <td>6.80%</td>\n      <td>23.60%</td>\n      <td>24.40%</td>\n      <td>16.30%</td>\n      <td>14.40%</td>\n      <td>...</td>\n      <td>231,959</td>\n      <td>123,158</td>\n      <td>75,962</td>\n      <td>35,982</td>\n      <td>189,029</td>\n      <td>25,915</td>\n      <td>192,988</td>\n      <td>56</td>\n      <td>52,035.48</td>\n      <td>\"05\"</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 65 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# dropping redundant column index\ndf_T.drop('Fact', axis=0, inplace=True)\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Population estimates, July 1, 2016,  (V2016)</th>\n      <th>Population estimates base, April 1, 2010,  (V2016)</th>\n      <th>Population, percent change - April 1, 2010 (estimates base) to July 1, 2016,  (V2016)</th>\n      <th>Population, Census, April 1, 2010</th>\n      <th>Persons under 5 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 5 years, percent, April 1, 2010</th>\n      <th>Persons under 18 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 18 years, percent, April 1, 2010</th>\n      <th>Persons 65 years and over, percent,  July 1, 2016,  (V2016)</th>\n      <th>Persons 65 years and over, percent, April 1, 2010</th>\n      <th>...</th>\n      <th>All firms, 2012</th>\n      <th>Men-owned firms, 2012</th>\n      <th>Women-owned firms, 2012</th>\n      <th>Minority-owned firms, 2012</th>\n      <th>Nonminority-owned firms, 2012</th>\n      <th>Veteran-owned firms, 2012</th>\n      <th>Nonveteran-owned firms, 2012</th>\n      <th>Population per square mile, 2010</th>\n      <th>Land area in square miles, 2010</th>\n      <th>FIPS Code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>4,780,131</td>\n      <td>1.70%</td>\n      <td>4,779,736</td>\n      <td>6.00%</td>\n      <td>6.40%</td>\n      <td>22.60%</td>\n      <td>23.70%</td>\n      <td>16.10%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>374,153</td>\n      <td>203,604</td>\n      <td>137,630</td>\n      <td>92,219</td>\n      <td>272,651</td>\n      <td>41,943</td>\n      <td>316,984</td>\n      <td>94.4</td>\n      <td>50,645.33</td>\n      <td>\"01\"</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>710,249</td>\n      <td>4.50%</td>\n      <td>710,231</td>\n      <td>7.30%</td>\n      <td>7.60%</td>\n      <td>25.20%</td>\n      <td>26.40%</td>\n      <td>10.40%</td>\n      <td>7.70%</td>\n      <td>...</td>\n      <td>68,032</td>\n      <td>35,402</td>\n      <td>22,141</td>\n      <td>13,688</td>\n      <td>51,147</td>\n      <td>7,953</td>\n      <td>56,091</td>\n      <td>1.2</td>\n      <td>570,640.95</td>\n      <td>\"02\"</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6,392,301</td>\n      <td>8.40%</td>\n      <td>6,392,017</td>\n      <td>6.30%</td>\n      <td>7.10%</td>\n      <td>23.50%</td>\n      <td>25.50%</td>\n      <td>16.90%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>499,926</td>\n      <td>245,243</td>\n      <td>182,425</td>\n      <td>135,313</td>\n      <td>344,981</td>\n      <td>46,780</td>\n      <td>427,582</td>\n      <td>56.3</td>\n      <td>113,594.08</td>\n      <td>\"04\"</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>2,916,025</td>\n      <td>2.50%</td>\n      <td>2,915,918</td>\n      <td>6.40%</td>\n      <td>6.80%</td>\n      <td>23.60%</td>\n      <td>24.40%</td>\n      <td>16.30%</td>\n      <td>14.40%</td>\n      <td>...</td>\n      <td>231,959</td>\n      <td>123,158</td>\n      <td>75,962</td>\n      <td>35,982</td>\n      <td>189,029</td>\n      <td>25,915</td>\n      <td>192,988</td>\n      <td>56</td>\n      <td>52,035.48</td>\n      <td>\"05\"</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>39,250,017</td>\n      <td>37,254,522</td>\n      <td>5.40%</td>\n      <td>37,253,956</td>\n      <td>6.30%</td>\n      <td>6.80%</td>\n      <td>23.20%</td>\n      <td>25.00%</td>\n      <td>13.60%</td>\n      <td>11.40%</td>\n      <td>...</td>\n      <td>3,548,449</td>\n      <td>1,852,580</td>\n      <td>1,320,085</td>\n      <td>1,619,857</td>\n      <td>1,819,107</td>\n      <td>252,377</td>\n      <td>3,176,341</td>\n      <td>239.1</td>\n      <td>155,779.22</td>\n      <td>\"06\"</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 65 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# inspecting the shape of the reshaped dataframe\ndf_T.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n(50, 65)\n```\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# inspecting all states present in the census data\nstate = df_T.index\nstate\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\nIndex(['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado',\n       'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho',\n       'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',\n       'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',\n       'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada',\n       'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n       'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon',\n       'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota',\n       'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington',\n       'West Virginia', 'Wisconsin', 'Wyoming'],\n      dtype='object')\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# dropping irrelevant columns\n\ndf_T.drop(columns=['Total employer establishments, 2015',\n'Total employment, 2015',\n'Total annual payroll, 2015 ($1,000)',\n'Total employment, percent change, 2014-2015',\n'Total nonemployer establishments, 2015'], inplace=True)\n\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Population estimates, July 1, 2016,  (V2016)</th>\n      <th>Population estimates base, April 1, 2010,  (V2016)</th>\n      <th>Population, percent change - April 1, 2010 (estimates base) to July 1, 2016,  (V2016)</th>\n      <th>Population, Census, April 1, 2010</th>\n      <th>Persons under 5 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 5 years, percent, April 1, 2010</th>\n      <th>Persons under 18 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 18 years, percent, April 1, 2010</th>\n      <th>Persons 65 years and over, percent,  July 1, 2016,  (V2016)</th>\n      <th>Persons 65 years and over, percent, April 1, 2010</th>\n      <th>...</th>\n      <th>All firms, 2012</th>\n      <th>Men-owned firms, 2012</th>\n      <th>Women-owned firms, 2012</th>\n      <th>Minority-owned firms, 2012</th>\n      <th>Nonminority-owned firms, 2012</th>\n      <th>Veteran-owned firms, 2012</th>\n      <th>Nonveteran-owned firms, 2012</th>\n      <th>Population per square mile, 2010</th>\n      <th>Land area in square miles, 2010</th>\n      <th>FIPS Code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>4,780,131</td>\n      <td>1.70%</td>\n      <td>4,779,736</td>\n      <td>6.00%</td>\n      <td>6.40%</td>\n      <td>22.60%</td>\n      <td>23.70%</td>\n      <td>16.10%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>374,153</td>\n      <td>203,604</td>\n      <td>137,630</td>\n      <td>92,219</td>\n      <td>272,651</td>\n      <td>41,943</td>\n      <td>316,984</td>\n      <td>94.4</td>\n      <td>50,645.33</td>\n      <td>\"01\"</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>710,249</td>\n      <td>4.50%</td>\n      <td>710,231</td>\n      <td>7.30%</td>\n      <td>7.60%</td>\n      <td>25.20%</td>\n      <td>26.40%</td>\n      <td>10.40%</td>\n      <td>7.70%</td>\n      <td>...</td>\n      <td>68,032</td>\n      <td>35,402</td>\n      <td>22,141</td>\n      <td>13,688</td>\n      <td>51,147</td>\n      <td>7,953</td>\n      <td>56,091</td>\n      <td>1.2</td>\n      <td>570,640.95</td>\n      <td>\"02\"</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6,392,301</td>\n      <td>8.40%</td>\n      <td>6,392,017</td>\n      <td>6.30%</td>\n      <td>7.10%</td>\n      <td>23.50%</td>\n      <td>25.50%</td>\n      <td>16.90%</td>\n      <td>13.80%</td>\n      <td>...</td>\n      <td>499,926</td>\n      <td>245,243</td>\n      <td>182,425</td>\n      <td>135,313</td>\n      <td>344,981</td>\n      <td>46,780</td>\n      <td>427,582</td>\n      <td>56.3</td>\n      <td>113,594.08</td>\n      <td>\"04\"</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>2,916,025</td>\n      <td>2.50%</td>\n      <td>2,915,918</td>\n      <td>6.40%</td>\n      <td>6.80%</td>\n      <td>23.60%</td>\n      <td>24.40%</td>\n      <td>16.30%</td>\n      <td>14.40%</td>\n      <td>...</td>\n      <td>231,959</td>\n      <td>123,158</td>\n      <td>75,962</td>\n      <td>35,982</td>\n      <td>189,029</td>\n      <td>25,915</td>\n      <td>192,988</td>\n      <td>56</td>\n      <td>52,035.48</td>\n      <td>\"05\"</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>39,250,017</td>\n      <td>37,254,522</td>\n      <td>5.40%</td>\n      <td>37,253,956</td>\n      <td>6.30%</td>\n      <td>6.80%</td>\n      <td>23.20%</td>\n      <td>25.00%</td>\n      <td>13.60%</td>\n      <td>11.40%</td>\n      <td>...</td>\n      <td>3,548,449</td>\n      <td>1,852,580</td>\n      <td>1,320,085</td>\n      <td>1,619,857</td>\n      <td>1,819,107</td>\n      <td>252,377</td>\n      <td>3,176,341</td>\n      <td>239.1</td>\n      <td>155,779.22</td>\n      <td>\"06\"</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 60 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# dropping more irrelevant columns\n\ndf_T.drop(columns=['Men-owned firms, 2012',\n'Women-owned firms, 2012',\n'Minority-owned firms, 2012',\n'Nonminority-owned firms, 2012',\n'Veteran-owned firms, 2012',\n'Nonveteran-owned firms, 2012',\n'Population per square mile, 2010',\n'Land area in square miles, 2010',\n'FIPS Code',\n'In civilian labor force, total, percent of population age 16 years+, 2011-2015',\n'In civilian labor force, female, percent of population age 16 years+, 2011-2015',\n'Total accommodation and food services sales, 2012 ($1,000)',\n'Total health care and social assistance receipts/revenue, 2012 ($1,000)',\n'Total manufacturers shipments, 2012 ($1,000)',\n'Total merchant wholesaler sales, 2012 ($1,000)',\n'Total retail sales, 2012 ($1,000)',\n'Total retail sales per capita, 2012',\n'Mean travel time to work (minutes), workers age 16 years+, 2011-2015',\n'With a disability, under age 65 years, percent, 2011-2015',\n'Living in same house 1 year ago, percent of persons age 1 year+, 2011-2015',\n'Language other than English spoken at home, percent of persons age 5 years+, 2011-2015',\n'Building permits, 2016',\n'Households, 2011-2015',\n'Median selected monthly owner costs -with a mortgage, 2011-2015',\n'Median selected monthly owner costs -without a mortgage, 2011-2015',\n'Native Hawaiian and Other Pacific Islander alone, percent, July 1, 2016,  (V2016)',\n'Two or More Races, percent, July 1, 2016,  (V2016)',\n'Hispanic or Latino, percent, July 1, 2016,  (V2016)',\n'White alone, not Hispanic or Latino, percent, July 1, 2016,  (V2016)',\n'Veterans, 2011-2015',\n'Foreign born persons, percent, 2011-2015',\n'Housing units,  July 1, 2016,  (V2016)',\n'Housing units, April 1, 2010',\n'Owner-occupied housing unit rate, 2011-2015',\n'American Indian and Alaska Native alone, percent, July 1, 2016,  (V2016)',\n'Persons 65 years and over, percent, April 1, 2010',\n'Female persons, percent, April 1, 2010',\n'Persons under 18 years, percent, April 1, 2010',\n'Persons under 5 years, percent, April 1, 2010',\n'Population estimates base, April 1, 2010,  (V2016)',\n'Population, percent change - April 1, 2010 (estimates base) to July 1, 2016,  (V2016)',\n'Population, Census, April 1, 2010'], inplace=True)\n\ndf_T.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Population estimates, July 1, 2016,  (V2016)</th>\n      <th>Persons under 5 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons under 18 years, percent, July 1, 2016,  (V2016)</th>\n      <th>Persons 65 years and over, percent,  July 1, 2016,  (V2016)</th>\n      <th>Female persons, percent,  July 1, 2016,  (V2016)</th>\n      <th>White alone, percent, July 1, 2016,  (V2016)</th>\n      <th>Black or African American alone, percent, July 1, 2016,  (V2016)</th>\n      <th>Asian alone, percent, July 1, 2016,  (V2016)</th>\n      <th>Median value of owner-occupied housing units, 2011-2015</th>\n      <th>Median gross rent, 2011-2015</th>\n      <th>Persons per household, 2011-2015</th>\n      <th>High school graduate or higher, percent of persons age 25 years+, 2011-2015</th>\n      <th>Bachelor's degree or higher, percent of persons age 25 years+, 2011-2015</th>\n      <th>Persons  without health insurance, under age 65 years, percent</th>\n      <th>Median household income (in 2015 dollars), 2011-2015</th>\n      <th>Per capita income in past 12 months (in 2015 dollars), 2011-2015</th>\n      <th>Persons in poverty, percent</th>\n      <th>All firms, 2012</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>6.00%</td>\n      <td>22.60%</td>\n      <td>16.10%</td>\n      <td>51.60%</td>\n      <td>69.30%</td>\n      <td>26.80%</td>\n      <td>1.40%</td>\n      <td>$125,500</td>\n      <td>$717</td>\n      <td>2.55</td>\n      <td>84.30%</td>\n      <td>23.50%</td>\n      <td>10.70%</td>\n      <td>$43,623</td>\n      <td>$24,091</td>\n      <td>17.10%</td>\n      <td>374,153</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>7.30%</td>\n      <td>25.20%</td>\n      <td>10.40%</td>\n      <td>47.70%</td>\n      <td>66.10%</td>\n      <td>3.80%</td>\n      <td>6.30%</td>\n      <td>$250,000</td>\n      <td>$1,146</td>\n      <td>2.81</td>\n      <td>92.10%</td>\n      <td>28.00%</td>\n      <td>15.50%</td>\n      <td>$72,515</td>\n      <td>$33,413</td>\n      <td>9.90%</td>\n      <td>68,032</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6.30%</td>\n      <td>23.50%</td>\n      <td>16.90%</td>\n      <td>50.30%</td>\n      <td>83.30%</td>\n      <td>4.90%</td>\n      <td>3.40%</td>\n      <td>$167,500</td>\n      <td>$913</td>\n      <td>2.69</td>\n      <td>86.00%</td>\n      <td>27.50%</td>\n      <td>11.90%</td>\n      <td>$50,255</td>\n      <td>$25,848</td>\n      <td>16.40%</td>\n      <td>499,926</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\n# checking dataframe\ndf_T.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n(50, 18)\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# checking columns\ndf_T.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\nIndex(['Population estimates, July 1, 2016,  (V2016)',\n       'Persons under 5 years, percent, July 1, 2016,  (V2016)',\n       'Persons under 18 years, percent, July 1, 2016,  (V2016)',\n       'Persons 65 years and over, percent,  July 1, 2016,  (V2016)',\n       'Female persons, percent,  July 1, 2016,  (V2016)',\n       'White alone, percent, July 1, 2016,  (V2016)',\n       'Black or African American alone, percent, July 1, 2016,  (V2016)',\n       'Asian alone, percent, July 1, 2016,  (V2016)',\n       'Median value of owner-occupied housing units, 2011-2015',\n       'Median gross rent, 2011-2015', 'Persons per household, 2011-2015',\n       'High school graduate or higher, percent of persons age 25 years+, 2011-2015',\n       'Bachelor's degree or higher, percent of persons age 25 years+, 2011-2015',\n       'Persons  without health insurance, under age 65 years, percent',\n       'Median household income (in 2015 dollars), 2011-2015',\n       'Per capita income in past 12 months (in 2015 dollars), 2011-2015',\n       'Persons in poverty, percent', 'All firms, 2012'],\n      dtype='object')\n```\n:::\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\n# renaming the columns for clarity\n\ndf_T.rename(columns={'Population estimates, July 1, 2016,  (V2016)':'pop_2016',\n'Persons under 5 years, percent, July 1, 2016,  (V2016)':'under_5',\n'Persons under 18 years, percent, July 1, 2016,  (V2016)':'under_18',\n'Persons 65 years and over, percent,  July 1, 2016,  (V2016)':'65_above',\n'Female persons, percent,  July 1, 2016,  (V2016)':'female_pct',\n'White alone, percent, July 1, 2016,  (V2016)':'white_pct',\n'Black or African American alone, percent, July 1, 2016,  (V2016)':'black_pct',\n'Asian alone, percent, July 1, 2016,  (V2016)':'asian_pct',\n'Median value of owner-occupied housing units, 2011-2015':'median_hu',\n'Median gross rent, 2011-2015':'median_gross_rent',\n'Persons per household, 2011-2015':'pe_hh',\n'High school graduate or higher, percent of persons age 25 years+, 2011-2015':'high_school_grad_higher',\n'Bachelor\\'s degree or higher, percent of persons age 25 years+, 2011-2015':'bsc_higher',\n'Persons  without health insurance, under age 65 years, percent':'pe_whi',\n'Median household income (in 2015 dollars), 2011-2015':'median_hh_income',\n'Per capita income in past 12 months (in 2015 dollars), 2011-2015':'per_cap_inc',\n'Persons in poverty, percent':'poverty_pct',\n'All firms, 2012':'firms'\n}, inplace=True)\n\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_2016</th>\n      <th>under_5</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>6.00%</td>\n      <td>22.60%</td>\n      <td>16.10%</td>\n      <td>51.60%</td>\n      <td>69.30%</td>\n      <td>26.80%</td>\n      <td>1.40%</td>\n      <td>$125,500</td>\n      <td>$717</td>\n      <td>2.55</td>\n      <td>84.30%</td>\n      <td>23.50%</td>\n      <td>10.70%</td>\n      <td>$43,623</td>\n      <td>$24,091</td>\n      <td>17.10%</td>\n      <td>374,153</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>7.30%</td>\n      <td>25.20%</td>\n      <td>10.40%</td>\n      <td>47.70%</td>\n      <td>66.10%</td>\n      <td>3.80%</td>\n      <td>6.30%</td>\n      <td>$250,000</td>\n      <td>$1,146</td>\n      <td>2.81</td>\n      <td>92.10%</td>\n      <td>28.00%</td>\n      <td>15.50%</td>\n      <td>$72,515</td>\n      <td>$33,413</td>\n      <td>9.90%</td>\n      <td>68,032</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>6.30%</td>\n      <td>23.50%</td>\n      <td>16.90%</td>\n      <td>50.30%</td>\n      <td>83.30%</td>\n      <td>4.90%</td>\n      <td>3.40%</td>\n      <td>$167,500</td>\n      <td>$913</td>\n      <td>2.69</td>\n      <td>86.00%</td>\n      <td>27.50%</td>\n      <td>11.90%</td>\n      <td>$50,255</td>\n      <td>$25,848</td>\n      <td>16.40%</td>\n      <td>499,926</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>6.40%</td>\n      <td>23.60%</td>\n      <td>16.30%</td>\n      <td>50.90%</td>\n      <td>79.40%</td>\n      <td>15.70%</td>\n      <td>1.60%</td>\n      <td>$111,400</td>\n      <td>$677</td>\n      <td>2.53</td>\n      <td>84.80%</td>\n      <td>21.10%</td>\n      <td>9.30%</td>\n      <td>$41,371</td>\n      <td>$22,798</td>\n      <td>17.20%</td>\n      <td>231,959</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>39,250,017</td>\n      <td>6.30%</td>\n      <td>23.20%</td>\n      <td>13.60%</td>\n      <td>50.30%</td>\n      <td>72.70%</td>\n      <td>6.50%</td>\n      <td>14.80%</td>\n      <td>$385,500</td>\n      <td>$1,255</td>\n      <td>2.96</td>\n      <td>81.80%</td>\n      <td>31.40%</td>\n      <td>8.30%</td>\n      <td>$61,818</td>\n      <td>$30,318</td>\n      <td>14.30%</td>\n      <td>3,548,449</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\n# I subsequently decided to drop 'under_5' as it relates little to the problem statement\n\ndf_T.drop(columns='under_5', inplace=True)\n```\n:::\n\n\n### In this section I will assess the data to spot irregularities and then clean the data\n\nUsing pandas to explore `df_T` to answer the following questions about the characteristics of the datasets:\n\n-   *number of states in each dataset*\n\n-   *number of columns in each datase*t\n\n-   *duplicate rows in each dataset*\n\n-   *datatypes of columns*\n\n-   *features with missing values*\n\n-   *number of non-null unique values for features in each dataset*\n\n-   *what those unique values are and counts for each*\n\n-   *Number of rows with missing values in each dataset*\n\n-   *Types of fuels present in each dataset*\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\n# checking out the head of the dataframe\ndf_T.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>4,863,300</td>\n      <td>22.60%</td>\n      <td>16.10%</td>\n      <td>51.60%</td>\n      <td>69.30%</td>\n      <td>26.80%</td>\n      <td>1.40%</td>\n      <td>$125,500</td>\n      <td>$717</td>\n      <td>2.55</td>\n      <td>84.30%</td>\n      <td>23.50%</td>\n      <td>10.70%</td>\n      <td>$43,623</td>\n      <td>$24,091</td>\n      <td>17.10%</td>\n      <td>374,153</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>741,894</td>\n      <td>25.20%</td>\n      <td>10.40%</td>\n      <td>47.70%</td>\n      <td>66.10%</td>\n      <td>3.80%</td>\n      <td>6.30%</td>\n      <td>$250,000</td>\n      <td>$1,146</td>\n      <td>2.81</td>\n      <td>92.10%</td>\n      <td>28.00%</td>\n      <td>15.50%</td>\n      <td>$72,515</td>\n      <td>$33,413</td>\n      <td>9.90%</td>\n      <td>68,032</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>6,931,071</td>\n      <td>23.50%</td>\n      <td>16.90%</td>\n      <td>50.30%</td>\n      <td>83.30%</td>\n      <td>4.90%</td>\n      <td>3.40%</td>\n      <td>$167,500</td>\n      <td>$913</td>\n      <td>2.69</td>\n      <td>86.00%</td>\n      <td>27.50%</td>\n      <td>11.90%</td>\n      <td>$50,255</td>\n      <td>$25,848</td>\n      <td>16.40%</td>\n      <td>499,926</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>2,988,248</td>\n      <td>23.60%</td>\n      <td>16.30%</td>\n      <td>50.90%</td>\n      <td>79.40%</td>\n      <td>15.70%</td>\n      <td>1.60%</td>\n      <td>$111,400</td>\n      <td>$677</td>\n      <td>2.53</td>\n      <td>84.80%</td>\n      <td>21.10%</td>\n      <td>9.30%</td>\n      <td>$41,371</td>\n      <td>$22,798</td>\n      <td>17.20%</td>\n      <td>231,959</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>39,250,017</td>\n      <td>23.20%</td>\n      <td>13.60%</td>\n      <td>50.30%</td>\n      <td>72.70%</td>\n      <td>6.50%</td>\n      <td>14.80%</td>\n      <td>$385,500</td>\n      <td>$1,255</td>\n      <td>2.96</td>\n      <td>81.80%</td>\n      <td>31.40%</td>\n      <td>8.30%</td>\n      <td>$61,818</td>\n      <td>$30,318</td>\n      <td>14.30%</td>\n      <td>3,548,449</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\n# number of states\nprint(f'There are {df_T.shape[0]} rows (representing each state in the contiguous U.S. and Alaska) in this dataset')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThere are 50 rows (representing each state in the contiguous U.S. and Alaska) in this dataset\n```\n:::\n:::\n\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\n# number of columns\nprint(f'There are {df_T.shape[1]} columns')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThere are 17 columns\n```\n:::\n:::\n\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\n# number of duplicate rows\ndf_T.duplicated().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\n0\n```\n:::\n:::\n\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\n# datatypes of each column\ndf_T.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 50 entries, Alabama to Wyoming\nData columns (total 17 columns):\n #   Column                   Non-Null Count  Dtype \n---  ------                   --------------  ----- \n 0   pop_2016                 50 non-null     object\n 1   under_18                 50 non-null     object\n 2   65_above                 50 non-null     object\n 3   female_pct               50 non-null     object\n 4   white_pct                50 non-null     object\n 5   black_pct                50 non-null     object\n 6   asian_pct                50 non-null     object\n 7   median_hu                50 non-null     object\n 8   median_gross_rent        50 non-null     object\n 9   pe_hh                    50 non-null     object\n 10  high_school_grad_higher  50 non-null     object\n 11  bsc_higher               50 non-null     object\n 12  pe_whi                   50 non-null     object\n 13  median_hh_income         50 non-null     object\n 14  per_cap_inc              50 non-null     object\n 15  poverty_pct              50 non-null     object\n 16  firms                    50 non-null     object\ndtypes: object(17)\nmemory usage: 7.0+ KB\n```\n:::\n:::\n\n\nThe datatypes are oddly all in object type. This was because of the transpose function I used earlier in the script to convert the data from wide to long According to the pandas documentation, when *transpose()* is called upon a dataframe with heterogeneous datatypes, all the columns are converted to the object datatype.\n\nI will fix this later.\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\n# features with missing values\ndf_T.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\npop_2016                   0\nunder_18                   0\n65_above                   0\nfemale_pct                 0\nwhite_pct                  0\nblack_pct                  0\nasian_pct                  0\nmedian_hu                  0\nmedian_gross_rent          0\npe_hh                      0\nhigh_school_grad_higher    0\nbsc_higher                 0\npe_whi                     0\nmedian_hh_income           0\nper_cap_inc                0\npoverty_pct                0\nfirms                      0\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\n# number of rows with missing values\ndf_T.isnull().any(axis=1).sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n0\n```\n:::\n:::\n\n\n::: {.cell execution_count=26}\n``` {.python .cell-code}\n# saving for later\ndf_T.to_csv('Data/df_T_01.csv')\n```\n:::\n\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\n# reading in the data\ndf_U = pd.read_csv('Data/df_T_01.csv')\ndf_U.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4,863,300</td>\n      <td>22.60%</td>\n      <td>16.10%</td>\n      <td>51.60%</td>\n      <td>69.30%</td>\n      <td>26.80%</td>\n      <td>1.40%</td>\n      <td>$125,500</td>\n      <td>$717</td>\n      <td>2.55</td>\n      <td>84.30%</td>\n      <td>23.50%</td>\n      <td>10.70%</td>\n      <td>$43,623</td>\n      <td>$24,091</td>\n      <td>17.10%</td>\n      <td>374,153</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741,894</td>\n      <td>25.20%</td>\n      <td>10.40%</td>\n      <td>47.70%</td>\n      <td>66.10%</td>\n      <td>3.80%</td>\n      <td>6.30%</td>\n      <td>$250,000</td>\n      <td>$1,146</td>\n      <td>2.81</td>\n      <td>92.10%</td>\n      <td>28.00%</td>\n      <td>15.50%</td>\n      <td>$72,515</td>\n      <td>$33,413</td>\n      <td>9.90%</td>\n      <td>68,032</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6,931,071</td>\n      <td>23.50%</td>\n      <td>16.90%</td>\n      <td>50.30%</td>\n      <td>83.30%</td>\n      <td>4.90%</td>\n      <td>3.40%</td>\n      <td>$167,500</td>\n      <td>$913</td>\n      <td>2.69</td>\n      <td>86.00%</td>\n      <td>27.50%</td>\n      <td>11.90%</td>\n      <td>$50,255</td>\n      <td>$25,848</td>\n      <td>16.40%</td>\n      <td>499,926</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2,988,248</td>\n      <td>23.60%</td>\n      <td>16.30%</td>\n      <td>50.90%</td>\n      <td>79.40%</td>\n      <td>15.70%</td>\n      <td>1.60%</td>\n      <td>$111,400</td>\n      <td>$677</td>\n      <td>2.53</td>\n      <td>84.80%</td>\n      <td>21.10%</td>\n      <td>9.30%</td>\n      <td>$41,371</td>\n      <td>$22,798</td>\n      <td>17.20%</td>\n      <td>231,959</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39,250,017</td>\n      <td>23.20%</td>\n      <td>13.60%</td>\n      <td>50.30%</td>\n      <td>72.70%</td>\n      <td>6.50%</td>\n      <td>14.80%</td>\n      <td>$385,500</td>\n      <td>$1,255</td>\n      <td>2.96</td>\n      <td>81.80%</td>\n      <td>31.40%</td>\n      <td>8.30%</td>\n      <td>$61,818</td>\n      <td>$30,318</td>\n      <td>14.30%</td>\n      <td>3,548,449</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=28}\n``` {.python .cell-code}\n# dropping renaming column\ndf_U.rename(columns={'Unnamed: 0':'state'}, inplace=True)\ndf_U.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4,863,300</td>\n      <td>22.60%</td>\n      <td>16.10%</td>\n      <td>51.60%</td>\n      <td>69.30%</td>\n      <td>26.80%</td>\n      <td>1.40%</td>\n      <td>$125,500</td>\n      <td>$717</td>\n      <td>2.55</td>\n      <td>84.30%</td>\n      <td>23.50%</td>\n      <td>10.70%</td>\n      <td>$43,623</td>\n      <td>$24,091</td>\n      <td>17.10%</td>\n      <td>374,153</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741,894</td>\n      <td>25.20%</td>\n      <td>10.40%</td>\n      <td>47.70%</td>\n      <td>66.10%</td>\n      <td>3.80%</td>\n      <td>6.30%</td>\n      <td>$250,000</td>\n      <td>$1,146</td>\n      <td>2.81</td>\n      <td>92.10%</td>\n      <td>28.00%</td>\n      <td>15.50%</td>\n      <td>$72,515</td>\n      <td>$33,413</td>\n      <td>9.90%</td>\n      <td>68,032</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6,931,071</td>\n      <td>23.50%</td>\n      <td>16.90%</td>\n      <td>50.30%</td>\n      <td>83.30%</td>\n      <td>4.90%</td>\n      <td>3.40%</td>\n      <td>$167,500</td>\n      <td>$913</td>\n      <td>2.69</td>\n      <td>86.00%</td>\n      <td>27.50%</td>\n      <td>11.90%</td>\n      <td>$50,255</td>\n      <td>$25,848</td>\n      <td>16.40%</td>\n      <td>499,926</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2,988,248</td>\n      <td>23.60%</td>\n      <td>16.30%</td>\n      <td>50.90%</td>\n      <td>79.40%</td>\n      <td>15.70%</td>\n      <td>1.60%</td>\n      <td>$111,400</td>\n      <td>$677</td>\n      <td>2.53</td>\n      <td>84.80%</td>\n      <td>21.10%</td>\n      <td>9.30%</td>\n      <td>$41,371</td>\n      <td>$22,798</td>\n      <td>17.20%</td>\n      <td>231,959</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39,250,017</td>\n      <td>23.20%</td>\n      <td>13.60%</td>\n      <td>50.30%</td>\n      <td>72.70%</td>\n      <td>6.50%</td>\n      <td>14.80%</td>\n      <td>$385,500</td>\n      <td>$1,255</td>\n      <td>2.96</td>\n      <td>81.80%</td>\n      <td>31.40%</td>\n      <td>8.30%</td>\n      <td>$61,818</td>\n      <td>$30,318</td>\n      <td>14.30%</td>\n      <td>3,548,449</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nOne of the reasons the data is stored as the object type is because of the '%', ',', and '\\$' symbols. In the following cells, I remove these offending characters\n\n::: {.cell execution_count=29}\n``` {.python .cell-code}\n# extracting digits from the following columns using regex\n\nimport re\n\ncols_extract = ['under_18','65_above', 'female_pct', 'white_pct', 'black_pct', 'asian_pct','high_school_grad_higher', 'bsc_higher', 'pe_whi', 'poverty_pct']\n\nfor col in cols_extract:\n    df_U[col]= df_U[col].str.extract(r'(\\d*\\.?\\d+)').astype(float)\n\ndf_U.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4,863,300</td>\n      <td>22.6</td>\n      <td>16.1</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>$125,500</td>\n      <td>$717</td>\n      <td>2.55</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>10.7</td>\n      <td>$43,623</td>\n      <td>$24,091</td>\n      <td>17.1</td>\n      <td>374,153</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741,894</td>\n      <td>25.2</td>\n      <td>10.4</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>$250,000</td>\n      <td>$1,146</td>\n      <td>2.81</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>15.5</td>\n      <td>$72,515</td>\n      <td>$33,413</td>\n      <td>9.9</td>\n      <td>68,032</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6,931,071</td>\n      <td>23.5</td>\n      <td>16.9</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>$167,500</td>\n      <td>$913</td>\n      <td>2.69</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>11.9</td>\n      <td>$50,255</td>\n      <td>$25,848</td>\n      <td>16.4</td>\n      <td>499,926</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2,988,248</td>\n      <td>23.6</td>\n      <td>16.3</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>$111,400</td>\n      <td>$677</td>\n      <td>2.53</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>9.3</td>\n      <td>$41,371</td>\n      <td>$22,798</td>\n      <td>17.2</td>\n      <td>231,959</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39,250,017</td>\n      <td>23.2</td>\n      <td>13.6</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>$385,500</td>\n      <td>$1,255</td>\n      <td>2.96</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>8.3</td>\n      <td>$61,818</td>\n      <td>$30,318</td>\n      <td>14.3</td>\n      <td>3,548,449</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=30}\n``` {.python .cell-code}\n# removing the dollar sign symbol using a lambda function and converting to the float datatype\ncols_extract = ['pop_2016', 'median_hu', 'median_gross_rent', 'median_hh_income', 'per_cap_inc', 'firms']\n\nfor col in cols_extract:\n    df_U[col]= df_U[col].apply(lambda x: x.replace('$','').replace(',','') if isinstance(x, str) else x).astype(float)\ndf_U.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>22.6</td>\n      <td>16.1</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>2.55</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>10.7</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>17.1</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>25.2</td>\n      <td>10.4</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>2.81</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>15.5</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>9.9</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>23.5</td>\n      <td>16.9</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>2.69</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>11.9</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>16.4</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>23.6</td>\n      <td>16.3</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>2.53</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>9.3</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>17.2</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>23.2</td>\n      <td>13.6</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>2.96</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>8.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>14.3</td>\n      <td>3548449.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=31}\n``` {.python .cell-code}\n# checking the transformed datatypes\ndf_U.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 50 entries, 0 to 49\nData columns (total 18 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   state                    50 non-null     object \n 1   pop_2016                 50 non-null     float64\n 2   under_18                 50 non-null     float64\n 3   65_above                 50 non-null     float64\n 4   female_pct               50 non-null     float64\n 5   white_pct                50 non-null     float64\n 6   black_pct                50 non-null     float64\n 7   asian_pct                50 non-null     float64\n 8   median_hu                50 non-null     float64\n 9   median_gross_rent        50 non-null     float64\n 10  pe_hh                    50 non-null     float64\n 11  high_school_grad_higher  50 non-null     float64\n 12  bsc_higher               50 non-null     float64\n 13  pe_whi                   50 non-null     float64\n 14  median_hh_income         50 non-null     float64\n 15  per_cap_inc              50 non-null     float64\n 16  poverty_pct              50 non-null     float64\n 17  firms                    50 non-null     float64\ndtypes: float64(17), object(1)\nmemory usage: 7.2+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=32}\n``` {.python .cell-code}\n# shape of the new dataframe\ndf_U.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```\n(50, 18)\n```\n:::\n:::\n\n\n::: {.cell execution_count=33}\n``` {.python .cell-code}\n# tail of the new dataframe\ndf_U.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>45</th>\n      <td>Virginia</td>\n      <td>8411808.0</td>\n      <td>22.2</td>\n      <td>14.6</td>\n      <td>50.8</td>\n      <td>70.0</td>\n      <td>19.8</td>\n      <td>6.6</td>\n      <td>245000.0</td>\n      <td>1116.0</td>\n      <td>2.62</td>\n      <td>88.3</td>\n      <td>36.3</td>\n      <td>10.1</td>\n      <td>65015.0</td>\n      <td>34152.0</td>\n      <td>11.0</td>\n      <td>653193.0</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Washington</td>\n      <td>7288000.0</td>\n      <td>22.4</td>\n      <td>14.8</td>\n      <td>50.0</td>\n      <td>80.0</td>\n      <td>4.1</td>\n      <td>8.6</td>\n      <td>259500.0</td>\n      <td>1014.0</td>\n      <td>2.56</td>\n      <td>90.4</td>\n      <td>32.9</td>\n      <td>6.9</td>\n      <td>61062.0</td>\n      <td>31762.0</td>\n      <td>11.3</td>\n      <td>541522.0</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>West Virginia</td>\n      <td>1831102.0</td>\n      <td>20.5</td>\n      <td>18.8</td>\n      <td>50.5</td>\n      <td>93.6</td>\n      <td>3.6</td>\n      <td>0.8</td>\n      <td>103800.0</td>\n      <td>643.0</td>\n      <td>2.43</td>\n      <td>85.0</td>\n      <td>19.2</td>\n      <td>6.5</td>\n      <td>41751.0</td>\n      <td>23450.0</td>\n      <td>17.9</td>\n      <td>114435.0</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Wisconsin</td>\n      <td>5778708.0</td>\n      <td>22.3</td>\n      <td>16.1</td>\n      <td>50.3</td>\n      <td>87.5</td>\n      <td>6.6</td>\n      <td>2.8</td>\n      <td>165800.0</td>\n      <td>776.0</td>\n      <td>2.43</td>\n      <td>91.0</td>\n      <td>27.8</td>\n      <td>6.2</td>\n      <td>53357.0</td>\n      <td>28340.0</td>\n      <td>11.8</td>\n      <td>432980.0</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Wyoming</td>\n      <td>585501.0</td>\n      <td>23.7</td>\n      <td>15.0</td>\n      <td>48.9</td>\n      <td>92.8</td>\n      <td>1.3</td>\n      <td>1.0</td>\n      <td>194800.0</td>\n      <td>789.0</td>\n      <td>2.49</td>\n      <td>92.3</td>\n      <td>25.7</td>\n      <td>13.4</td>\n      <td>58840.0</td>\n      <td>29803.0</td>\n      <td>11.3</td>\n      <td>62427.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=34}\n``` {.python .cell-code}\n# summary statistics\ndf_U.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=34}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>5.000000e+01</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>5.000000e+01</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>6.448927e+06</td>\n      <td>17.425780</td>\n      <td>11.81044</td>\n      <td>38.511740</td>\n      <td>60.397020</td>\n      <td>8.360900</td>\n      <td>3.63118</td>\n      <td>192026.000000</td>\n      <td>879.880000</td>\n      <td>2.582000</td>\n      <td>67.424100</td>\n      <td>22.363160</td>\n      <td>7.078540</td>\n      <td>54311.860000</td>\n      <td>28491.780000</td>\n      <td>10.05498</td>\n      <td>5.548918e+05</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7.271769e+06</td>\n      <td>9.936137</td>\n      <td>6.84738</td>\n      <td>21.584467</td>\n      <td>35.861896</td>\n      <td>9.917937</td>\n      <td>5.79106</td>\n      <td>79742.431821</td>\n      <td>181.106761</td>\n      <td>0.164105</td>\n      <td>37.882927</td>\n      <td>13.383697</td>\n      <td>5.044314</td>\n      <td>8949.529115</td>\n      <td>4103.284534</td>\n      <td>6.26358</td>\n      <td>6.645229e+05</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>5.855010e+05</td>\n      <td>0.197000</td>\n      <td>0.14500</td>\n      <td>0.487000</td>\n      <td>0.685000</td>\n      <td>0.020000</td>\n      <td>0.01500</td>\n      <td>103100.000000</td>\n      <td>643.000000</td>\n      <td>2.320000</td>\n      <td>0.842000</td>\n      <td>0.241000</td>\n      <td>0.051000</td>\n      <td>39665.000000</td>\n      <td>21057.000000</td>\n      <td>0.10700</td>\n      <td>6.242700e+04</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.850106e+06</td>\n      <td>19.025000</td>\n      <td>10.42500</td>\n      <td>48.000000</td>\n      <td>34.175000</td>\n      <td>0.650000</td>\n      <td>0.80000</td>\n      <td>136600.000000</td>\n      <td>743.500000</td>\n      <td>2.482500</td>\n      <td>81.825000</td>\n      <td>19.575000</td>\n      <td>3.225000</td>\n      <td>47526.000000</td>\n      <td>25443.750000</td>\n      <td>7.80000</td>\n      <td>1.478222e+05</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.559320e+06</td>\n      <td>22.250000</td>\n      <td>15.00000</td>\n      <td>50.300000</td>\n      <td>77.400000</td>\n      <td>4.700000</td>\n      <td>2.35000</td>\n      <td>165900.000000</td>\n      <td>818.500000</td>\n      <td>2.550000</td>\n      <td>87.850000</td>\n      <td>27.200000</td>\n      <td>7.050000</td>\n      <td>52601.000000</td>\n      <td>27669.500000</td>\n      <td>11.35000</td>\n      <td>3.535155e+05</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.198768e+06</td>\n      <td>23.450000</td>\n      <td>16.10000</td>\n      <td>50.900000</td>\n      <td>87.275000</td>\n      <td>12.400000</td>\n      <td>4.55000</td>\n      <td>237300.000000</td>\n      <td>1001.500000</td>\n      <td>2.637500</td>\n      <td>90.625000</td>\n      <td>31.075000</td>\n      <td>10.100000</td>\n      <td>60599.000000</td>\n      <td>30977.000000</td>\n      <td>14.25000</td>\n      <td>5.933612e+05</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.925002e+07</td>\n      <td>30.200000</td>\n      <td>19.90000</td>\n      <td>51.600000</td>\n      <td>94.800000</td>\n      <td>37.700000</td>\n      <td>37.70000</td>\n      <td>515300.000000</td>\n      <td>1438.000000</td>\n      <td>3.150000</td>\n      <td>92.800000</td>\n      <td>40.500000</td>\n      <td>18.600000</td>\n      <td>74551.000000</td>\n      <td>38803.000000</td>\n      <td>20.80000</td>\n      <td>3.548449e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=35}\n``` {.python .cell-code}\n# saving for later\ndf_U.to_csv('Data/df_census_cleaned.csv')\n```\n:::\n\n\nNow, on to wrangle the second dataset in this project – NCIS gun data\n\n## Data Wrangling (b)\n\n### General Properties\n\n*Loading and inspecting the census data*\n\n::: {.cell execution_count=36}\n``` {.python .cell-code}\n# reading the data in\ndf_gun = pd.read_excel('Data/gun_data.xlsx')\ndf_gun.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>month</th>\n      <th>state</th>\n      <th>permit</th>\n      <th>permit_recheck</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>other</th>\n      <th>multiple</th>\n      <th>admin</th>\n      <th>prepawn_handgun</th>\n      <th>...</th>\n      <th>returned_other</th>\n      <th>rentals_handgun</th>\n      <th>rentals_long_gun</th>\n      <th>private_sale_handgun</th>\n      <th>private_sale_long_gun</th>\n      <th>private_sale_other</th>\n      <th>return_to_seller_handgun</th>\n      <th>return_to_seller_long_gun</th>\n      <th>return_to_seller_other</th>\n      <th>totals</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2017-09</td>\n      <td>Alabama</td>\n      <td>16717.0</td>\n      <td>0.0</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>221.0</td>\n      <td>317</td>\n      <td>0.0</td>\n      <td>15.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>16.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3.0</td>\n      <td>32019</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2017-09</td>\n      <td>Alaska</td>\n      <td>209.0</td>\n      <td>2.0</td>\n      <td>2320.0</td>\n      <td>2930.0</td>\n      <td>219.0</td>\n      <td>160</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>17.0</td>\n      <td>24.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>6303</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2017-09</td>\n      <td>Arizona</td>\n      <td>5069.0</td>\n      <td>382.0</td>\n      <td>11063.0</td>\n      <td>7946.0</td>\n      <td>920.0</td>\n      <td>631</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>38.0</td>\n      <td>12.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>28394</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2017-09</td>\n      <td>Arkansas</td>\n      <td>2935.0</td>\n      <td>632.0</td>\n      <td>4347.0</td>\n      <td>6063.0</td>\n      <td>165.0</td>\n      <td>366</td>\n      <td>51.0</td>\n      <td>12.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>1.0</td>\n      <td>17747</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2017-09</td>\n      <td>California</td>\n      <td>57839.0</td>\n      <td>0.0</td>\n      <td>37165.0</td>\n      <td>24581.0</td>\n      <td>2984.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>123506</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 27 columns</p>\n</div>\n```\n:::\n:::\n\n\n### In this section I will assess the data to spot irregularities and then clean the data\n\nUsing pandas to explore `df_T` to answer the following questions about the characteristics of the datasets:\n\n-   *number of states in each dataset*\n\n-   *number of columns in each datase*t\n\n-   *duplicate rows in each dataset*\n\n-   *datatypes of columns*\n\n-   *features with missing values*\n\n-   *number of non-null unique values for features in each dataset*\n\n-   *what those unique values are and counts for each*\n\n-   *Number of rows with missing values in each dataset*\n\n-   *Types of fuels present in each dataset*\n\n::: {.cell execution_count=37}\n``` {.python .cell-code}\n# selecting relevant columns\ncol_gun = ['state', 'month', 'handgun', 'long_gun', 'multiple']\ndf_gun_raw =  df_gun[col_gun]\ndf_gun_raw.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=37}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>month</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>2017-09</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>317</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2017-09</td>\n      <td>2320.0</td>\n      <td>2930.0</td>\n      <td>160</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>2017-09</td>\n      <td>11063.0</td>\n      <td>7946.0</td>\n      <td>631</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2017-09</td>\n      <td>4347.0</td>\n      <td>6063.0</td>\n      <td>366</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>2017-09</td>\n      <td>37165.0</td>\n      <td>24581.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=38}\n``` {.python .cell-code}\n# number of rows\nprint(f'Rows: {df_gun_raw.shape[0]}')\n\n# number of columns\nprint(f'Columns: {df_gun_raw.shape[1]}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 12485\nColumns: 5\n```\n:::\n:::\n\n\n::: {.cell execution_count=39}\n``` {.python .cell-code}\n# duplicate rows \ndf_gun_raw.duplicated().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=39}\n```\n0\n```\n:::\n:::\n\n\n::: {.cell execution_count=40}\n``` {.python .cell-code}\n# datatypes of columns\ndf_gun_raw.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 12485 entries, 0 to 12484\nData columns (total 5 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   state     12485 non-null  object \n 1   month     12485 non-null  object \n 2   handgun   12465 non-null  float64\n 3   long_gun  12466 non-null  float64\n 4   multiple  12485 non-null  int64  \ndtypes: float64(2), int64(1), object(2)\nmemory usage: 487.8+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=41}\n``` {.python .cell-code}\n# number of non-null unique values for features\ndf_gun_raw['state'].nunique()\n```\n\n::: {.cell-output .cell-output-display execution_count=41}\n```\n55\n```\n:::\n:::\n\n\n::: {.cell execution_count=42}\n``` {.python .cell-code}\n# what those unique values are and counts for each\ndf_gun_raw.state.value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=42}\n```\nstate\nAlabama                 227\nPuerto Rico             227\nNevada                  227\nNew Hampshire           227\nNew Jersey              227\nNew Mexico              227\nNew York                227\nNorth Carolina          227\nNorth Dakota            227\nOhio                    227\nOklahoma                227\nOregon                  227\nPennsylvania            227\nRhode Island            227\nMontana                 227\nSouth Carolina          227\nSouth Dakota            227\nTennessee               227\nTexas                   227\nUtah                    227\nVermont                 227\nVirgin Islands          227\nVirginia                227\nWashington              227\nWest Virginia           227\nWisconsin               227\nNebraska                227\nMissouri                227\nAlaska                  227\nIdaho                   227\nArizona                 227\nArkansas                227\nCalifornia              227\nColorado                227\nConnecticut             227\nDelaware                227\nDistrict of Columbia    227\nFlorida                 227\nGeorgia                 227\nGuam                    227\nHawaii                  227\nIllinois                227\nMississippi             227\nIndiana                 227\nIowa                    227\nKansas                  227\nKentucky                227\nLouisiana               227\nMaine                   227\nMariana Islands         227\nMaryland                227\nMassachusetts           227\nMichigan                227\nMinnesota               227\nWyoming                 227\nName: count, dtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=43}\n``` {.python .cell-code}\n# observing the result\ndf_gun_raw.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 12485 entries, 0 to 12484\nData columns (total 5 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   state     12485 non-null  object \n 1   month     12485 non-null  object \n 2   handgun   12465 non-null  float64\n 3   long_gun  12466 non-null  float64\n 4   multiple  12485 non-null  int64  \ndtypes: float64(2), int64(1), object(2)\nmemory usage: 487.8+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=44}\n``` {.python .cell-code}\n# renaming the column appropriately\ndf_gun_raw.rename(columns={'month':'date'}, inplace=True)\ndf_gun_raw.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 12485 entries, 0 to 12484\nData columns (total 5 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   state     12485 non-null  object \n 1   date      12485 non-null  object \n 2   handgun   12465 non-null  float64\n 3   long_gun  12466 non-null  float64\n 4   multiple  12485 non-null  int64  \ndtypes: float64(2), int64(1), object(2)\nmemory usage: 487.8+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=45}\n``` {.python .cell-code}\n# converting to datetime\ndf_gun_raw['date'] = pd.to_datetime(df_gun_raw['date'], format='%Y-%m')\ndf_gun_raw['date'].head()\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```\n0   2017-09-01\n1   2017-09-01\n2   2017-09-01\n3   2017-09-01\n4   2017-09-01\nName: date, dtype: datetime64[ns]\n```\n:::\n:::\n\n\n::: {.cell execution_count=46}\n``` {.python .cell-code}\ndf_gun_raw.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 12485 entries, 0 to 12484\nData columns (total 5 columns):\n #   Column    Non-Null Count  Dtype         \n---  ------    --------------  -----         \n 0   state     12485 non-null  object        \n 1   date      12485 non-null  datetime64[ns]\n 2   handgun   12465 non-null  float64       \n 3   long_gun  12466 non-null  float64       \n 4   multiple  12485 non-null  int64         \ndtypes: datetime64[ns](1), float64(2), int64(1), object(1)\nmemory usage: 487.8+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=47}\n``` {.python .cell-code}\ndf_gun_raw.date.dt.year\n```\n\n::: {.cell-output .cell-output-display execution_count=47}\n```\n0        2017\n1        2017\n2        2017\n3        2017\n4        2017\n         ... \n12480    1998\n12481    1998\n12482    1998\n12483    1998\n12484    1998\nName: date, Length: 12485, dtype: int32\n```\n:::\n:::\n\n\n::: {.cell execution_count=48}\n``` {.python .cell-code}\n# extracting year and month data from the date column\ndf_gun_raw['year'] = df_gun_raw['date'].dt.year\ndf_gun_raw['month'] = df_gun_raw['date'].dt.month\ndf_gun_raw.head(1)\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>date</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>2017-09-01</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>317</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=49}\n``` {.python .cell-code}\n# dropping the redundant date column\ndf_gun_raw.drop(columns='date', inplace=True)\ndf_gun_raw.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=49}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>317</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2320.0</td>\n      <td>2930.0</td>\n      <td>160</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>11063.0</td>\n      <td>7946.0</td>\n      <td>631</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4347.0</td>\n      <td>6063.0</td>\n      <td>366</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>37165.0</td>\n      <td>24581.0</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=50}\n``` {.python .cell-code}\n# observing the tail of the data\ndf_gun_raw.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=50}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>12480</th>\n      <td>Virginia</td>\n      <td>14.0</td>\n      <td>2.0</td>\n      <td>8</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12481</th>\n      <td>Washington</td>\n      <td>65.0</td>\n      <td>286.0</td>\n      <td>8</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12482</th>\n      <td>West Virginia</td>\n      <td>149.0</td>\n      <td>251.0</td>\n      <td>5</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12483</th>\n      <td>Wisconsin</td>\n      <td>25.0</td>\n      <td>214.0</td>\n      <td>2</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12484</th>\n      <td>Wyoming</td>\n      <td>45.0</td>\n      <td>49.0</td>\n      <td>5</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=51}\n``` {.python .cell-code}\n# checking out metadata of dataframe\ndf_gun_raw.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 12485 entries, 0 to 12484\nData columns (total 6 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   state     12485 non-null  object \n 1   handgun   12465 non-null  float64\n 2   long_gun  12466 non-null  float64\n 3   multiple  12485 non-null  int64  \n 4   year      12485 non-null  int32  \n 5   month     12485 non-null  int32  \ndtypes: float64(2), int32(2), int64(1), object(1)\nmemory usage: 487.8+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=52}\n``` {.python .cell-code}\n# saving data for later\ndf_gun_raw.to_csv('Data/df_gun_cleaned.csv')\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## Further Wrangling\n\n### *In this section, I will further wrangle the dataframes and derive calculated columns*\n\n::: {.cell execution_count=53}\n``` {.python .cell-code}\n# reading in the census data\ndf1=pd.read_csv('Data/df_census_cleaned.csv', index_col=0)\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=53}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>22.6</td>\n      <td>16.1</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>2.55</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>10.7</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>17.1</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>25.2</td>\n      <td>10.4</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>2.81</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>15.5</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>9.9</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>23.5</td>\n      <td>16.9</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>2.69</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>11.9</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>16.4</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>23.6</td>\n      <td>16.3</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>2.53</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>9.3</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>17.2</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>23.2</td>\n      <td>13.6</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>2.96</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>8.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>14.3</td>\n      <td>3548449.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=54}\n``` {.python .cell-code}\n# reading in the gun sales data\ndf2=pd.read_csv('Data/df_gun_cleaned.csv', index_col=0)\ndf2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=54}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>317</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2320.0</td>\n      <td>2930.0</td>\n      <td>160</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>11063.0</td>\n      <td>7946.0</td>\n      <td>631</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4347.0</td>\n      <td>6063.0</td>\n      <td>366</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>37165.0</td>\n      <td>24581.0</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=55}\n``` {.python .cell-code}\n# checking out the shape of the census dataframe\ndf1.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=55}\n```\n(50, 18)\n```\n:::\n:::\n\n\n::: {.cell execution_count=56}\n``` {.python .cell-code}\n# checking out the shape of the gun dataframe\ndf2.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=56}\n```\n(12485, 6)\n```\n:::\n:::\n\n\n::: {.cell execution_count=57}\n``` {.python .cell-code}\n# I want to have a calculated column for the % of adult population (between 18 & 65),\n# as I think this would be more relevant to the analysis than the data on children and elderly population\n\ndf1['adults_below_65'] = 100 - (df1['under_18']  +\tdf1['65_above'])\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=57}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>under_18</th>\n      <th>65_above</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n      <th>adults_below_65</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>22.6</td>\n      <td>16.1</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>2.55</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>10.7</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>17.1</td>\n      <td>374153.0</td>\n      <td>61.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>25.2</td>\n      <td>10.4</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>2.81</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>15.5</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>9.9</td>\n      <td>68032.0</td>\n      <td>64.4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>23.5</td>\n      <td>16.9</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>2.69</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>11.9</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>16.4</td>\n      <td>499926.0</td>\n      <td>59.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>23.6</td>\n      <td>16.3</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>2.53</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>9.3</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>17.2</td>\n      <td>231959.0</td>\n      <td>60.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>23.2</td>\n      <td>13.6</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>2.96</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>8.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>14.3</td>\n      <td>3548449.0</td>\n      <td>63.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=58}\n``` {.python .cell-code}\n# dropping the afore-used columns\ndf1.drop(columns=['under_18', '65_above'], inplace=True)\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=58}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>pe_hh</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>pe_whi</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>poverty_pct</th>\n      <th>firms</th>\n      <th>adults_below_65</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>2.55</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>10.7</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>17.1</td>\n      <td>374153.0</td>\n      <td>61.3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>2.81</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>15.5</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>9.9</td>\n      <td>68032.0</td>\n      <td>64.4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>2.69</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>11.9</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>16.4</td>\n      <td>499926.0</td>\n      <td>59.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>2.53</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>9.3</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>17.2</td>\n      <td>231959.0</td>\n      <td>60.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>2.96</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>8.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>14.3</td>\n      <td>3548449.0</td>\n      <td>63.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=59}\n``` {.python .cell-code}\n# grouping the columns in similar group\n\ndemographic = [\n    'state',\n    \"pop_2016\",\n    \"female_pct\",\n    \"white_pct\",\n    \"black_pct\",\n    \"asian_pct\",\n    \"pe_hh\",\n    \"pe_whi\",\n    \"adults_below_65\"\n]\n\neducation = [\n    \"high_school_grad_higher\",\n    \"bsc_higher\"\n]\n\nfinances = [\n    \"median_hu\",\n    \"median_gross_rent\",\n    \"poverty_pct\",\n    \"median_hh_income\",\n    \"per_cap_inc\",\n    \"firms\"\n]\n```\n:::\n\n\n::: {.cell execution_count=60}\n``` {.python .cell-code}\n# new column ordering\nnew_col_order = (demographic + education + finances)\n\n# checking if the number of items in new_col_order is the same as in the original column\nset(df1.columns) == set(new_col_order)\n```\n\n::: {.cell-output .cell-output-display execution_count=60}\n```\nTrue\n```\n:::\n:::\n\n\n::: {.cell execution_count=61}\n``` {.python .cell-code}\n# proceeding to reorder\ndf1 = df1[new_col_order]\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=61}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>2.55</td>\n      <td>10.7</td>\n      <td>61.3</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>17.1</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>2.81</td>\n      <td>15.5</td>\n      <td>64.4</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>9.9</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>2.69</td>\n      <td>11.9</td>\n      <td>59.6</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>16.4</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>2.53</td>\n      <td>9.3</td>\n      <td>60.1</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>17.2</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>2.96</td>\n      <td>8.3</td>\n      <td>63.2</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>14.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>3548449.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=62}\n``` {.python .cell-code}\n# saving for later\ndf1.to_csv('Data/df_census_cleaned_1.csv')\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## Exploratory Data Analysis 1\n\n### (Census Data)\n\n::: {.cell execution_count=63}\n``` {.python .cell-code}\n# Reading in the dataset, and viewing heads, tails and  and random sample of the rows \ndf1 = pd.read_csv('Data/df_census_cleaned_1.csv', index_col=0)\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=63}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>2.55</td>\n      <td>10.7</td>\n      <td>61.3</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>17.1</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>2.81</td>\n      <td>15.5</td>\n      <td>64.4</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>9.9</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>2.69</td>\n      <td>11.9</td>\n      <td>59.6</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>16.4</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>2.53</td>\n      <td>9.3</td>\n      <td>60.1</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>17.2</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>2.96</td>\n      <td>8.3</td>\n      <td>63.2</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>14.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>3548449.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=64}\n``` {.python .cell-code}\n# viewing tail of data\ndf1.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=64}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>45</th>\n      <td>Virginia</td>\n      <td>8411808.0</td>\n      <td>50.8</td>\n      <td>70.0</td>\n      <td>19.8</td>\n      <td>6.6</td>\n      <td>2.62</td>\n      <td>10.1</td>\n      <td>63.2</td>\n      <td>88.3</td>\n      <td>36.3</td>\n      <td>245000.0</td>\n      <td>1116.0</td>\n      <td>11.0</td>\n      <td>65015.0</td>\n      <td>34152.0</td>\n      <td>653193.0</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Washington</td>\n      <td>7288000.0</td>\n      <td>50.0</td>\n      <td>80.0</td>\n      <td>4.1</td>\n      <td>8.6</td>\n      <td>2.56</td>\n      <td>6.9</td>\n      <td>62.8</td>\n      <td>90.4</td>\n      <td>32.9</td>\n      <td>259500.0</td>\n      <td>1014.0</td>\n      <td>11.3</td>\n      <td>61062.0</td>\n      <td>31762.0</td>\n      <td>541522.0</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>West Virginia</td>\n      <td>1831102.0</td>\n      <td>50.5</td>\n      <td>93.6</td>\n      <td>3.6</td>\n      <td>0.8</td>\n      <td>2.43</td>\n      <td>6.5</td>\n      <td>60.7</td>\n      <td>85.0</td>\n      <td>19.2</td>\n      <td>103800.0</td>\n      <td>643.0</td>\n      <td>17.9</td>\n      <td>41751.0</td>\n      <td>23450.0</td>\n      <td>114435.0</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Wisconsin</td>\n      <td>5778708.0</td>\n      <td>50.3</td>\n      <td>87.5</td>\n      <td>6.6</td>\n      <td>2.8</td>\n      <td>2.43</td>\n      <td>6.2</td>\n      <td>61.6</td>\n      <td>91.0</td>\n      <td>27.8</td>\n      <td>165800.0</td>\n      <td>776.0</td>\n      <td>11.8</td>\n      <td>53357.0</td>\n      <td>28340.0</td>\n      <td>432980.0</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Wyoming</td>\n      <td>585501.0</td>\n      <td>48.9</td>\n      <td>92.8</td>\n      <td>1.3</td>\n      <td>1.0</td>\n      <td>2.49</td>\n      <td>13.4</td>\n      <td>61.3</td>\n      <td>92.3</td>\n      <td>25.7</td>\n      <td>194800.0</td>\n      <td>789.0</td>\n      <td>11.3</td>\n      <td>58840.0</td>\n      <td>29803.0</td>\n      <td>62427.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=65}\n``` {.python .cell-code}\n# viewing random sample\ndf1.sample(n=5)\n```\n\n::: {.cell-output .cell-output-display execution_count=65}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>48</th>\n      <td>Wisconsin</td>\n      <td>5778708.0</td>\n      <td>50.300</td>\n      <td>87.500</td>\n      <td>6.600</td>\n      <td>2.800</td>\n      <td>2.43</td>\n      <td>6.200</td>\n      <td>61.600</td>\n      <td>91.000</td>\n      <td>27.800</td>\n      <td>165800.0</td>\n      <td>776.0</td>\n      <td>11.800</td>\n      <td>53357.0</td>\n      <td>28340.0</td>\n      <td>432980.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Iowa</td>\n      <td>3134693.0</td>\n      <td>50.300</td>\n      <td>91.400</td>\n      <td>3.700</td>\n      <td>2.500</td>\n      <td>2.42</td>\n      <td>5.000</td>\n      <td>60.300</td>\n      <td>91.500</td>\n      <td>26.700</td>\n      <td>129200.0</td>\n      <td>697.0</td>\n      <td>11.800</td>\n      <td>53183.0</td>\n      <td>27950.0</td>\n      <td>259121.0</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Tennessee</td>\n      <td>6651194.0</td>\n      <td>0.512</td>\n      <td>0.787</td>\n      <td>0.171</td>\n      <td>0.018</td>\n      <td>2.53</td>\n      <td>0.106</td>\n      <td>99.617</td>\n      <td>0.855</td>\n      <td>0.249</td>\n      <td>142100.0</td>\n      <td>764.0</td>\n      <td>0.158</td>\n      <td>45219.0</td>\n      <td>25227.0</td>\n      <td>550453.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Illinois</td>\n      <td>12801539.0</td>\n      <td>50.900</td>\n      <td>77.200</td>\n      <td>14.700</td>\n      <td>5.500</td>\n      <td>2.63</td>\n      <td>7.400</td>\n      <td>62.500</td>\n      <td>87.900</td>\n      <td>32.300</td>\n      <td>173800.0</td>\n      <td>907.0</td>\n      <td>13.000</td>\n      <td>57574.0</td>\n      <td>30494.0</td>\n      <td>1135017.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>47.700</td>\n      <td>66.100</td>\n      <td>3.800</td>\n      <td>6.300</td>\n      <td>2.81</td>\n      <td>15.500</td>\n      <td>64.400</td>\n      <td>92.100</td>\n      <td>28.000</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>9.900</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>68032.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=66}\n``` {.python .cell-code}\n# Getting the dimensions of the DataFrame with the .shape attribute:\ndf1.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=66}\n```\n(50, 17)\n```\n:::\n:::\n\n\n::: {.cell execution_count=67}\n``` {.python .cell-code}\n#  List the data type of each column, the number of non-missing values, and memory usage with the .info method:\ndf1.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 50 entries, 0 to 49\nData columns (total 17 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   state                    50 non-null     object \n 1   pop_2016                 50 non-null     float64\n 2   female_pct               50 non-null     float64\n 3   white_pct                50 non-null     float64\n 4   black_pct                50 non-null     float64\n 5   asian_pct                50 non-null     float64\n 6   pe_hh                    50 non-null     float64\n 7   pe_whi                   50 non-null     float64\n 8   adults_below_65          50 non-null     float64\n 9   high_school_grad_higher  50 non-null     float64\n 10  bsc_higher               50 non-null     float64\n 11  median_hu                50 non-null     float64\n 12  median_gross_rent        50 non-null     float64\n 13  poverty_pct              50 non-null     float64\n 14  median_hh_income         50 non-null     float64\n 15  per_cap_inc              50 non-null     float64\n 16  firms                    50 non-null     float64\ndtypes: float64(16), object(1)\nmemory usage: 7.0+ KB\n```\n:::\n:::\n\n\nThere are 50 rows in this dataset representing each state of the U.S measured by 16 features of interest The data is clean: there are no null values, and the datatypes are appropriate\n\n## Data Dictionary\n\n| **s/n** | **Variable**            | **Description**                                                             |\n|:------------------|:------------------|:---------------------------------|\n| 0       | state                   | Each of the 50 states of the contiguous U.S.                                |\n| 1       | pop_2016                | Population estimates by July 1, 2016                                        |\n| 2       | female_pct              | Female persons, percent, by July 1, 2016                                    |\n| 3       | white_pct               | White alone, percent, by July 1, 2016                                       |\n| 4       | black_pct               | Black or African American alone, percent by July 1, 2016                    |\n| 5       | asian_pct               | Asian alone, percent, July 1, 2016                                          |\n| 6       | pe_hh                   | Persons per household, 2011-2015                                            |\n| 7       | pe_whi                  | Persons without health insurance, under age 65 years, percent               |\n| 8       | adults_below_65         | adults older than 18, younger than 65, percent, 2016                        |\n| 9       | high_school_grad_higher | High school graduate or higher, percent of persons age 25 years+, 2011-2015 |\n| 10      | bsc_higher              | Bachelor\\\\'s degree or higher, percent of persons age 25 years+, 2011-2015  |\n| 11      | median_hu               | Median value of owner-occupied housing units, 2011-2015                     |\n| 12      | median_gross_rent       | Median gross rent, 2011-2015                                                |\n| 13      | poverty_pct             | Persons in poverty, percent                                                 |\n| 14      | median_hh_income        | Median household income (in 2015 dollars), 2011-2015                        |\n| 15      | per_cap_inc             | Per capita income in past 12 months (in 2015 dollars), 2011-2015            |\n| 16      | firms                   | All firms, 2012                                                             |\n\n::: {.cell execution_count=68}\n``` {.python .cell-code}\n# displaying summary statistics\ndf1.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=68}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>5.000000e+01</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>5.000000e+01</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>6.448927e+06</td>\n      <td>38.511740</td>\n      <td>60.397020</td>\n      <td>8.360900</td>\n      <td>3.63118</td>\n      <td>2.582000</td>\n      <td>7.078540</td>\n      <td>70.76378</td>\n      <td>67.424100</td>\n      <td>22.363160</td>\n      <td>192026.000000</td>\n      <td>879.880000</td>\n      <td>10.05498</td>\n      <td>54311.860000</td>\n      <td>28491.780000</td>\n      <td>5.548918e+05</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7.271769e+06</td>\n      <td>21.584467</td>\n      <td>35.861896</td>\n      <td>9.917937</td>\n      <td>5.79106</td>\n      <td>0.164105</td>\n      <td>5.044314</td>\n      <td>16.41933</td>\n      <td>37.882927</td>\n      <td>13.383697</td>\n      <td>79742.431821</td>\n      <td>181.106761</td>\n      <td>6.26358</td>\n      <td>8949.529115</td>\n      <td>4103.284534</td>\n      <td>6.645229e+05</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>5.855010e+05</td>\n      <td>0.487000</td>\n      <td>0.685000</td>\n      <td>0.020000</td>\n      <td>0.01500</td>\n      <td>2.320000</td>\n      <td>0.051000</td>\n      <td>58.90000</td>\n      <td>0.842000</td>\n      <td>0.241000</td>\n      <td>103100.000000</td>\n      <td>643.000000</td>\n      <td>0.10700</td>\n      <td>39665.000000</td>\n      <td>21057.000000</td>\n      <td>6.242700e+04</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.850106e+06</td>\n      <td>48.000000</td>\n      <td>34.175000</td>\n      <td>0.650000</td>\n      <td>0.80000</td>\n      <td>2.482500</td>\n      <td>3.225000</td>\n      <td>61.15000</td>\n      <td>81.825000</td>\n      <td>19.575000</td>\n      <td>136600.000000</td>\n      <td>743.500000</td>\n      <td>7.80000</td>\n      <td>47526.000000</td>\n      <td>25443.750000</td>\n      <td>1.478222e+05</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.559320e+06</td>\n      <td>50.300000</td>\n      <td>77.400000</td>\n      <td>4.700000</td>\n      <td>2.35000</td>\n      <td>2.550000</td>\n      <td>7.050000</td>\n      <td>62.25000</td>\n      <td>87.850000</td>\n      <td>27.200000</td>\n      <td>165900.000000</td>\n      <td>818.500000</td>\n      <td>11.35000</td>\n      <td>52601.000000</td>\n      <td>27669.500000</td>\n      <td>3.535155e+05</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.198768e+06</td>\n      <td>50.900000</td>\n      <td>87.275000</td>\n      <td>12.400000</td>\n      <td>4.55000</td>\n      <td>2.637500</td>\n      <td>10.100000</td>\n      <td>64.30000</td>\n      <td>90.625000</td>\n      <td>31.075000</td>\n      <td>237300.000000</td>\n      <td>1001.500000</td>\n      <td>14.25000</td>\n      <td>60599.000000</td>\n      <td>30977.000000</td>\n      <td>5.933612e+05</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.925002e+07</td>\n      <td>51.600000</td>\n      <td>94.800000</td>\n      <td>37.700000</td>\n      <td>37.70000</td>\n      <td>3.150000</td>\n      <td>18.600000</td>\n      <td>99.63800</td>\n      <td>92.800000</td>\n      <td>40.500000</td>\n      <td>515300.000000</td>\n      <td>1438.000000</td>\n      <td>20.80000</td>\n      <td>74551.000000</td>\n      <td>38803.000000</td>\n      <td>3.548449e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=69}\n``` {.python .cell-code}\n# plotting the kde of some variables to have a sense of the data distribution\nsns.set_style('darkgrid')\nfig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(1, 5, figsize=(20, 4))\n\ndf1[\"pop_2016\"].plot.kde(ax=ax1)\nax1.set_title('KDE plot for pop_2016')\n\ndf1[\"female_pct\"].plot.kde(ax=ax2)\nax2.set_title('KDE plot for female_pct')\n\ndf1[\"white_pct\"].plot.kde(ax=ax3)\nax3.set_title('KDE plot for white_pct')\n\ndf1[\"pe_hh\"].plot.kde(ax=ax4)\nax4.set_title('KDE plot for pe_hh')\n\ndf1[\"median_hu\"].plot.kde(ax=ax5)\nax5.set_title('KDE plot for median_hu')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-70-output-1.png){width=1541 height=372}\n:::\n:::\n\n\nUpon viewing the kde plot, there seems to be some unusually low values for the percentages columns. This was a result of some of the percentage columns being formatted as decimals After inspection, I identified the offending rows as rows\\[30:42\\]. To correct these rows, I simply target rows having values less than a benchmark below which the values cannot possibly be valid and multiply by 100\n\n::: {.cell execution_count=70}\n``` {.python .cell-code}\n# correcting `female_pct` column\nmask1 = df1['female_pct'] < 5\ncol1 = ['female_pct']\ndf1.loc[mask1, col1] = df1.loc[mask1, col1] * 100\n```\n:::\n\n\n::: {.cell execution_count=71}\n``` {.python .cell-code}\n# checking that values are reasonable\ndf1.female_pct.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=71}\n```\ncount    50.000000\nmean     50.564000\nstd       0.801213\nmin      47.700000\n25%      50.200000\n50%      50.650000\n75%      51.175000\nmax      51.600000\nName: female_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=72}\n``` {.python .cell-code}\n# checking offending rows\ndf1.white_pct[30:42]\n```\n\n::: {.cell-output .cell-output-display execution_count=72}\n```\n30    0.826\n31    0.699\n32    0.710\n33    0.879\n34    0.825\n35    0.746\n36    0.874\n37    0.824\n38    0.844\n39    0.685\n40    0.852\n41    0.787\nName: white_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=73}\n``` {.python .cell-code}\n# standardizing\nmask3 = df1['white_pct'] < 1\ncol3 = ['white_pct']\ndf1.loc[mask3, col3] = df1.loc[mask3, col3] * 100\n```\n:::\n\n\n::: {.cell execution_count=74}\n``` {.python .cell-code}\n# checking result\ndf1.white_pct[30:42]\n```\n\n::: {.cell-output .cell-output-display execution_count=74}\n```\n30    82.6\n31    69.9\n32    71.0\n33    87.9\n34    82.5\n35    74.6\n36    87.4\n37    82.4\n38    84.4\n39    68.5\n40    85.2\n41    78.7\nName: white_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=75}\n``` {.python .cell-code}\n# fishing rows\ndf1.black_pct.sort_values()\n```\n\n::: {.cell-output .cell-output-display execution_count=75}\n```\n40     0.020\n36     0.021\n30     0.025\n33     0.029\n35     0.078\n38     0.081\n37     0.118\n34     0.128\n41     0.171\n31     0.177\n32     0.222\n39     0.275\n25     0.600\n11     0.800\n49     1.300\n44     1.300\n43     1.400\n28     1.500\n18     1.500\n10     2.200\n47     3.600\n14     3.700\n1      3.800\n46     4.100\n5      4.500\n2      4.900\n26     5.000\n22     6.200\n15     6.200\n4      6.500\n48     6.600\n16     8.300\n20     8.600\n27     9.600\n13     9.700\n24    11.800\n6     11.800\n42    12.600\n21    14.200\n12    14.700\n29    15.000\n3     15.700\n8     16.800\n45    19.800\n7     22.600\n0     26.800\n19    30.700\n9     32.000\n17    32.600\n23    37.700\nName: black_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=76}\n``` {.python .cell-code}\n# checking for a particular row to see if indeed the value is valid, which it is\ndf1.loc[25]\n```\n\n::: {.cell-output .cell-output-display execution_count=76}\n```\nstate                        Montana\npop_2016                   1042520.0\nfemale_pct                      49.7\nwhite_pct                       89.2\nblack_pct                        0.6\nasian_pct                        0.8\npe_hh                           2.41\npe_whi                           9.8\nadults_below_65                 60.5\nhigh_school_grad_higher         92.8\nbsc_higher                      29.5\nmedian_hu                   193500.0\nmedian_gross_rent              711.0\npoverty_pct                     13.3\nmedian_hh_income             47169.0\nper_cap_inc                  26381.0\nfirms                       112419.0\nName: 25, dtype: object\n```\n:::\n:::\n\n\n::: {.cell execution_count=77}\n``` {.python .cell-code}\n# correcting 'black_pct\nmask2 = df1['black_pct'] < 0.3\ncol2 = ['black_pct']\ndf1.loc[mask2, col2] = df1.loc[mask2, col2] * 100\n```\n:::\n\n\n::: {.cell execution_count=78}\n``` {.python .cell-code}\n# checking result\ndf1.black_pct.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=78}\n```\ncount    50.000000\nmean     11.024000\nstd       9.631868\nmin       0.600000\n25%       3.625000\n50%       8.200000\n75%      15.525000\nmax      37.700000\nName: black_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=79}\n``` {.python .cell-code}\n# fishing out offending rows\ndf1.asian_pct.sort_values()\n```\n\n::: {.cell-output .cell-output-display execution_count=79}\n```\n40     0.015\n33     0.015\n39     0.016\n30     0.017\n41     0.018\n35     0.022\n34     0.022\n32     0.029\n37     0.035\n38     0.036\n36     0.045\n31     0.089\n47     0.800\n25     0.800\n49     1.000\n23     1.100\n18     1.200\n0      1.400\n16     1.500\n11     1.500\n3      1.600\n44     1.800\n17     1.800\n24     2.000\n13     2.200\n14     2.500\n26     2.500\n43     2.500\n28     2.700\n48     2.800\n8      2.900\n15     3.000\n21     3.100\n5      3.300\n2      3.400\n7      4.000\n9      4.100\n6      4.700\n42     4.800\n22     4.900\n12     5.500\n1      6.300\n19     6.600\n45     6.600\n20     6.700\n46     8.600\n27     8.700\n29     9.800\n4     14.800\n10    37.700\nName: asian_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=80}\n``` {.python .cell-code}\nmask4 = df1['asian_pct'] < 0.3\ncol4 = ['asian_pct']\ndf1.loc[mask4, col4] = df1.loc[mask4, col4] * 100\n```\n:::\n\n\n::: {.cell execution_count=81}\n``` {.python .cell-code}\n# checking results\ndf1.asian_pct.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=81}\n```\ncount    50.000000\nmean      4.342000\nstd       5.561973\nmin       0.800000\n25%       1.725000\n50%       2.850000\n75%       4.775000\nmax      37.700000\nName: asian_pct, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=82}\n``` {.python .cell-code}\n# correcting 'high_school_grad_higher'\nmask5 = df1['high_school_grad_higher'] < 5\ncol5 = ['high_school_grad_higher']\ndf1.loc[mask5, col5] = df1.loc[mask5, col5] * 100\n```\n:::\n\n\n::: {.cell execution_count=83}\n``` {.python .cell-code}\n# checking result\ndf1.bsc_higher.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=83}\n```\ncount    50.000000\nmean     22.363160\nstd      13.383697\nmin       0.241000\n25%      19.575000\n50%      27.200000\n75%      31.075000\nmax      40.500000\nName: bsc_higher, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=84}\n``` {.python .cell-code}\ndf1.bsc_higher.sort_values()\n```\n\n::: {.cell-output .cell-output-display execution_count=84}\n```\n35     0.241\n41     0.249\n39     0.258\n34     0.261\n30     0.263\n40     0.270\n33     0.277\n32     0.284\n37     0.286\n36     0.308\n38     0.319\n31     0.342\n47    19.200\n23    20.700\n3     21.100\n16    22.300\n17    22.500\n27    23.000\n0     23.500\n13    24.100\n49    25.700\n11    25.900\n14    26.700\n21    26.900\n24    27.100\n8     27.300\n2     27.500\n42    27.600\n48    27.800\n1     28.000\n9     28.800\n18    29.000\n26    29.300\n25    29.500\n7     30.000\n10    30.800\n15    31.000\n43    31.100\n4     31.400\n12    32.300\n46    32.900\n22    33.700\n28    34.900\n44    36.000\n45    36.300\n29    36.800\n6     37.600\n19    37.900\n5     38.100\n20    40.500\nName: bsc_higher, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=85}\n``` {.python .cell-code}\n#\nmask6 = df1['bsc_higher'] < 2\ncol6 = ['bsc_higher']\ndf1.loc[mask6, col6] = df1.loc[mask6, col6] * 100\n```\n:::\n\n\n::: {.cell execution_count=86}\n``` {.python .cell-code}\ndf1.bsc_higher.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=86}\n```\ncount    50.00000\nmean     29.01200\nstd       4.93404\nmin      19.20000\n25%      25.95000\n50%      28.20000\n75%      31.77500\nmax      40.50000\nName: bsc_higher, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=87}\n``` {.python .cell-code}\n#\nmask7 = df1['pe_whi'] < 1\ncol7 = ['pe_whi']\ndf1.loc[mask7, col7] = df1.loc[mask7, col7] * 100\n```\n:::\n\n\n::: {.cell execution_count=88}\n``` {.python .cell-code}\n# correcting the last % column\nmask8 = df1['poverty_pct'] < 1\ncol8 = ['poverty_pct']\ndf1.loc[mask8, col8] = df1.loc[mask8, col8] * 100\n```\n:::\n\n\n::: {.cell execution_count=89}\n``` {.python .cell-code}\n# checking the summary statistics again\ndf1.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=89}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>5.000000e+01</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.00000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>50.000000</td>\n      <td>5.000000e+01</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>6.448927e+06</td>\n      <td>50.564000</td>\n      <td>79.308000</td>\n      <td>11.024000</td>\n      <td>4.342000</td>\n      <td>2.582000</td>\n      <td>9.310000</td>\n      <td>70.76378</td>\n      <td>88.224000</td>\n      <td>29.01200</td>\n      <td>192026.000000</td>\n      <td>879.880000</td>\n      <td>13.518000</td>\n      <td>54311.860000</td>\n      <td>28491.780000</td>\n      <td>5.548918e+05</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7.271769e+06</td>\n      <td>0.801213</td>\n      <td>12.335908</td>\n      <td>9.631868</td>\n      <td>5.561973</td>\n      <td>0.164105</td>\n      <td>3.456095</td>\n      <td>16.41933</td>\n      <td>3.089585</td>\n      <td>4.93404</td>\n      <td>79742.431821</td>\n      <td>181.106761</td>\n      <td>3.019778</td>\n      <td>8949.529115</td>\n      <td>4103.284534</td>\n      <td>6.645229e+05</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>5.855010e+05</td>\n      <td>47.700000</td>\n      <td>25.800000</td>\n      <td>0.600000</td>\n      <td>0.800000</td>\n      <td>2.320000</td>\n      <td>2.900000</td>\n      <td>58.90000</td>\n      <td>81.800000</td>\n      <td>19.20000</td>\n      <td>103100.000000</td>\n      <td>643.000000</td>\n      <td>7.300000</td>\n      <td>39665.000000</td>\n      <td>21057.000000</td>\n      <td>6.242700e+04</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.850106e+06</td>\n      <td>50.200000</td>\n      <td>72.475000</td>\n      <td>3.625000</td>\n      <td>1.725000</td>\n      <td>2.482500</td>\n      <td>6.625000</td>\n      <td>61.15000</td>\n      <td>85.600000</td>\n      <td>25.95000</td>\n      <td>136600.000000</td>\n      <td>743.500000</td>\n      <td>11.300000</td>\n      <td>47526.000000</td>\n      <td>25443.750000</td>\n      <td>1.478222e+05</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.559320e+06</td>\n      <td>50.650000</td>\n      <td>82.100000</td>\n      <td>8.200000</td>\n      <td>2.850000</td>\n      <td>2.550000</td>\n      <td>9.350000</td>\n      <td>62.25000</td>\n      <td>88.850000</td>\n      <td>28.20000</td>\n      <td>165900.000000</td>\n      <td>818.500000</td>\n      <td>13.300000</td>\n      <td>52601.000000</td>\n      <td>27669.500000</td>\n      <td>3.535155e+05</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.198768e+06</td>\n      <td>51.175000</td>\n      <td>87.500000</td>\n      <td>15.525000</td>\n      <td>4.775000</td>\n      <td>2.637500</td>\n      <td>11.550000</td>\n      <td>64.30000</td>\n      <td>90.850000</td>\n      <td>31.77500</td>\n      <td>237300.000000</td>\n      <td>1001.500000</td>\n      <td>15.375000</td>\n      <td>60599.000000</td>\n      <td>30977.000000</td>\n      <td>5.933612e+05</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>3.925002e+07</td>\n      <td>51.600000</td>\n      <td>94.800000</td>\n      <td>37.700000</td>\n      <td>37.700000</td>\n      <td>3.150000</td>\n      <td>18.600000</td>\n      <td>99.63800</td>\n      <td>92.800000</td>\n      <td>40.50000</td>\n      <td>515300.000000</td>\n      <td>1438.000000</td>\n      <td>20.800000</td>\n      <td>74551.000000</td>\n      <td>38803.000000</td>\n      <td>3.548449e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=90}\n``` {.python .cell-code}\n# checking distribution again\n# plotting the kde of some variables to have a sense of the data distribution\n\nfig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(1, 5, figsize=(20, 4))\n\ndf1[\"pop_2016\"].plot.kde(ax=ax1)\nax1.set_title('KDE plot for pop_2016')\n\ndf1[\"female_pct\"].plot.kde(ax=ax2)\nax2.set_title('KDE plot for female_pct')\n\ndf1[\"white_pct\"].plot.kde(ax=ax3)\nax3.set_title('KDE plot for white_pct')\n\ndf1[\"pe_hh\"].plot.kde(ax=ax4)\nax4.set_title('KDE plot for pe_hh')\n\ndf1[\"median_hu\"].plot.kde(ax=ax5)\nax5.set_title('KDE plot for median_hu')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-91-output-1.png){width=1541 height=372}\n:::\n:::\n\n\nNow, the min values have no unusual numbers\\\nProceeding to EDA...\n\n## Preliminary Exploration on the Census Data\n\nSince the census dataset isn't the focus of this analysis, I will just do some brief exploration of the dataframe\n\n-   *What are the most populated and least states?*\n\n-   *Which states have highest and least black population?*\n\n-   *Which states have highest and lowest median household income?*\n\n::: {.cell execution_count=91}\n``` {.python .cell-code}\n# What are the most populated and least states?\na = df1[['state', 'pop_2016']].nlargest(5,'pop_2016')\nb = df1[['state', 'pop_2016']].nsmallest(5,'pop_2016')\n\nc_list = [a, b]\npd.concat(c_list, keys=['most populated', 'least pupulated'], axis='rows')\n```\n\n::: {.cell-output .cell-output-display execution_count=91}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">most populated</th>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Texas</td>\n      <td>27862596.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Florida</td>\n      <td>20612439.0</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>New York</td>\n      <td>19745289.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Illinois</td>\n      <td>12801539.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">least pupulated</th>\n      <th>49</th>\n      <td>Wyoming</td>\n      <td>585501.0</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Vermont</td>\n      <td>624594.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>North Dakota</td>\n      <td>757952.0</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>South Dakota</td>\n      <td>865454.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=92}\n``` {.python .cell-code}\n# Which states have highest and least black population?\na = df1[['state', 'black_pct']].nlargest(5,'black_pct')\nb = df1[['state', 'black_pct']].nsmallest(5,'black_pct')\n\nc_list = [a, b]\npd.concat(c_list, keys=['high black population', 'low black population'], axis='rows')\n```\n\n::: {.cell-output .cell-output-display execution_count=92}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>state</th>\n      <th>black_pct</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">high black population</th>\n      <th>23</th>\n      <td>Mississippi</td>\n      <td>37.7</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Louisiana</td>\n      <td>32.6</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Georgia</td>\n      <td>32.0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Maryland</td>\n      <td>30.7</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>South Carolina</td>\n      <td>27.5</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">low black population</th>\n      <th>25</th>\n      <td>Montana</td>\n      <td>0.6</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Idaho</td>\n      <td>0.8</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Vermont</td>\n      <td>1.3</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Wyoming</td>\n      <td>1.3</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Utah</td>\n      <td>1.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=93}\n``` {.python .cell-code}\n# Which states have highest and lowest median household income?\na = df1[['state', 'median_hh_income']].nlargest(5,'median_hh_income')\nb = df1[['state', 'median_hh_income']].nsmallest(5,'median_hh_income')\nc_list = [a, b]\npd.concat(c_list, keys=['high median household income ($)', 'low median household income ($)'], axis='rows')\n```\n\n::: {.cell-output .cell-output-display execution_count=93}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>state</th>\n      <th>median_hh_income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">high median household income ($)</th>\n      <th>19</th>\n      <td>Maryland</td>\n      <td>74551.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>72515.0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>New Jersey</td>\n      <td>72093.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Connecticut</td>\n      <td>70331.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Hawaii</td>\n      <td>69515.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">low median household income ($)</th>\n      <th>23</th>\n      <td>Mississippi</td>\n      <td>39665.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>41371.0</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>West Virginia</td>\n      <td>41751.0</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>43623.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Kentucky</td>\n      <td>43740.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=94}\n``` {.python .cell-code}\n# saving for later\ndf1.to_csv('Data/df_census_cleaned_v2.csv', index=0)\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## Preparing Gun Sales Data for EDA\n\n*In this section, I will prepare the dataframe for EDA*:\n\n::: {.cell execution_count=95}\n``` {.python .cell-code}\n# Reading in the dataset, and viewing heads, tails and  and random sample of the rows \ndf2 = pd.read_csv('Data/df_gun_cleaned.csv', index_col=0)\ndf2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=95}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>317</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2320.0</td>\n      <td>2930.0</td>\n      <td>160</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>11063.0</td>\n      <td>7946.0</td>\n      <td>631</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4347.0</td>\n      <td>6063.0</td>\n      <td>366</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>37165.0</td>\n      <td>24581.0</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=96}\n``` {.python .cell-code}\n# checking tail of data\ndf2.tail()\n```\n\n::: {.cell-output .cell-output-display execution_count=96}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>12480</th>\n      <td>Virginia</td>\n      <td>14.0</td>\n      <td>2.0</td>\n      <td>8</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12481</th>\n      <td>Washington</td>\n      <td>65.0</td>\n      <td>286.0</td>\n      <td>8</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12482</th>\n      <td>West Virginia</td>\n      <td>149.0</td>\n      <td>251.0</td>\n      <td>5</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12483</th>\n      <td>Wisconsin</td>\n      <td>25.0</td>\n      <td>214.0</td>\n      <td>2</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>12484</th>\n      <td>Wyoming</td>\n      <td>45.0</td>\n      <td>49.0</td>\n      <td>5</td>\n      <td>1998</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=97}\n``` {.python .cell-code}\n# viewing random sample\ndf2.sample(n=5)\n```\n\n::: {.cell-output .cell-output-display execution_count=97}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5493</th>\n      <td>Vermont</td>\n      <td>619.0</td>\n      <td>683.0</td>\n      <td>46</td>\n      <td>2009</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>7244</th>\n      <td>Oregon</td>\n      <td>4271.0</td>\n      <td>8203.0</td>\n      <td>290</td>\n      <td>2006</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>4102</th>\n      <td>New Jersey</td>\n      <td>2449.0</td>\n      <td>1754.0</td>\n      <td>80</td>\n      <td>2011</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>10568</th>\n      <td>District of Columbia</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2001</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>12033</th>\n      <td>South Carolina</td>\n      <td>4369.0</td>\n      <td>4793.0</td>\n      <td>77</td>\n      <td>1999</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=98}\n``` {.python .cell-code}\n# Getting the dimensions of the DataFrame with the .shape attribute:\ndf2.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=98}\n```\n(12485, 6)\n```\n:::\n:::\n\n\n::: {.cell execution_count=99}\n``` {.python .cell-code}\n# checking for nulls\ndf2.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=99}\n```\nstate        0\nhandgun     20\nlong_gun    19\nmultiple     0\nyear         0\nmonth        0\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=100}\n``` {.python .cell-code}\n# revealing the nulls\nmask = df2.long_gun.isnull()\ndf2[mask]\n```\n\n::: {.cell-output .cell-output-display execution_count=100}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>7914</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>7969</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>8024</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>8079</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>8134</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>8189</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>8299</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>8354</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8409</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2005</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8491</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2004</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>9674</th>\n      <td>Virgin Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2003</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>12011</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>12066</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>12121</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>12176</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>12231</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>12286</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>12341</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1999</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>12396</th>\n      <td>Mariana Islands</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1998</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nAfter doing some research, I could not find adequate data on gun purchases on these islands. If any, I figured it is going to be insubstantial anyway. So I proceed to fill these NaNs with zero.\n\n::: {.cell execution_count=101}\n``` {.python .cell-code}\n# fill nans with 0\ndf2.long_gun.fillna(0, inplace=True)\ndf2.handgun.fillna(0, inplace=True)\n```\n:::\n\n\n::: {.cell execution_count=102}\n``` {.python .cell-code}\n# inspecting\ndf2.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=102}\n```\nstate       0\nhandgun     0\nlong_gun    0\nmultiple    0\nyear        0\nmonth       0\ndtype: int64\n```\n:::\n:::\n\n\n::: {.cell execution_count=103}\n``` {.python .cell-code}\n#  List the data type of each column, the number of non-missing values, and memory usage with the .info method:\ndf2.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nIndex: 12485 entries, 0 to 12484\nData columns (total 6 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   state     12485 non-null  object \n 1   handgun   12485 non-null  float64\n 2   long_gun  12485 non-null  float64\n 3   multiple  12485 non-null  int64  \n 4   year      12485 non-null  int64  \n 5   month     12485 non-null  int64  \ndtypes: float64(2), int64(3), object(1)\nmemory usage: 682.8+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=104}\n``` {.python .cell-code}\n# saving for later\ndf2.to_csv('Data/df2_gun_cleaned_v2.csv', index=False)\n```\n:::\n\n\n::: {.cell execution_count=105}\n``` {.python .cell-code}\ndf2 = pd.read_csv('Data/df2_gun_cleaned_v2.csv')\ndf2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=105}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>5734.0</td>\n      <td>6320.0</td>\n      <td>317</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2320.0</td>\n      <td>2930.0</td>\n      <td>160</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>11063.0</td>\n      <td>7946.0</td>\n      <td>631</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4347.0</td>\n      <td>6063.0</td>\n      <td>366</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>37165.0</td>\n      <td>24581.0</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThere are 12485 rows in this dataset representing each month per state, from 1998 - 2017. The data is clean: there are no null values, and the datatypes are appropriately assigned.\n\n## Data Dictionary\n\n| **s/n** | **Variable** | **Description**                                          |\n|:-----------------|:-----------------|:-----------------------------------|\n| 0       | state        | Each of the 50 states of the contiguous U.S.             |\n| 1       | handgun      | Population estimates by July 1, 2016                     |\n| 2       | long_gun     | Female persons, percent, by July 1, 2016                 |\n| 3       | multiple     | White alone, percent, by July 1, 2016                    |\n| 4       | year         | Black or African American alone, percent by July 1, 2016 |\n| 5       | month        | Asian alone, percent, July 1, 2016                       |\n\n::: {.cell execution_count=106}\n``` {.python .cell-code}\n# displaying summary statistics\ndf2.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=106}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>12485.000000</td>\n      <td>12485.000000</td>\n      <td>12485.000000</td>\n      <td>12485.000000</td>\n      <td>12485.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5931.364277</td>\n      <td>7798.960833</td>\n      <td>268.603364</td>\n      <td>2007.792952</td>\n      <td>6.484581</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>8614.954626</td>\n      <td>9307.740581</td>\n      <td>783.185073</td>\n      <td>5.468296</td>\n      <td>3.451944</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1998.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>857.000000</td>\n      <td>2063.000000</td>\n      <td>15.000000</td>\n      <td>2003.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3046.000000</td>\n      <td>5114.000000</td>\n      <td>125.000000</td>\n      <td>2008.000000</td>\n      <td>6.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7277.000000</td>\n      <td>10374.000000</td>\n      <td>301.000000</td>\n      <td>2013.000000</td>\n      <td>9.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>107224.000000</td>\n      <td>108058.000000</td>\n      <td>38907.000000</td>\n      <td>2017.000000</td>\n      <td>12.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=107}\n``` {.python .cell-code}\n# Following a [NY Times recommendation], gun sales can be approximated from check calls \n# by multiplying checks for handgun and long_gun by a factor of 1.1 and that of multiple by 2\n\ndf2['handgun'] = df2['handgun'].mul(1.1)\ndf2['long_gun'] = df2['long_gun'].mul(1.1)\ndf2['multiple'] = df2['multiple'].mul(2)\n\n\ndf2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=107}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>year</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>6307.4</td>\n      <td>6952.0</td>\n      <td>634</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2552.0</td>\n      <td>3223.0</td>\n      <td>320</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>12169.3</td>\n      <td>8740.6</td>\n      <td>1262</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4781.7</td>\n      <td>6669.3</td>\n      <td>732</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>40881.5</td>\n      <td>27039.1</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=108}\n``` {.python .cell-code}\n# I am interested in gun trends in 2006, 2015 and 2016\n# so I extract data for those years\n\ndf2_2006 = df2[df2['year'] == 2006]\ndf2_2015 = df2[df2['year'] == 2015]\ndf2_2016 = df2[df2['year'] == 2016]\n```\n:::\n\n\n::: {.cell execution_count=109}\n``` {.python .cell-code}\n# Since the year variable is now redundant, I opt to drop them\n# I use the reset_index method to have the index start from 0\n\ndf2_2006 = df2_2006.drop(columns='year').reset_index(drop=True)\ndf2_2015 = df2_2015.drop(columns='year').reset_index(drop=True)\ndf2_2016 = df2_2016.drop(columns='year').reset_index(drop=True)\n```\n:::\n\n\n::: {.cell execution_count=110}\n``` {.python .cell-code}\n# checking the result\ndf2_2006.head(3)\n```\n\n::: {.cell-output .cell-output-display execution_count=110}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>11031.9</td>\n      <td>28608.8</td>\n      <td>882</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2190.1</td>\n      <td>3166.9</td>\n      <td>162</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>9188.3</td>\n      <td>12136.3</td>\n      <td>690</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=111}\n``` {.python .cell-code}\n# saving for later\ndf2_2006.to_csv('Data/df2_2006.csv')\ndf2_2015.to_csv('Data/df2_2015.csv')\ndf2_2016.to_csv('Data/df2_2016.csv')\n```\n:::\n\n\nViewing the head of the three dataframes\n\n::: {.cell execution_count=112}\n``` {.python .cell-code}\ndf2_2006 = pd.read_csv('Data/df2_2006.csv', index_col=0)\ndf2_2015 = pd.read_csv('Data/df2_2015.csv', index_col=0)\ndf2_2016 = pd.read_csv('Data/df2_2016.csv', index_col=0)\n\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=112}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>11031.9</td>\n      <td>28608.8</td>\n      <td>882</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2190.1</td>\n      <td>3166.9</td>\n      <td>162</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>9188.3</td>\n      <td>12136.3</td>\n      <td>690</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4814.7</td>\n      <td>17008.2</td>\n      <td>460</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>17902.5</td>\n      <td>22993.3</td>\n      <td>15684</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=113}\n``` {.python .cell-code}\ndf2_2015.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=113}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>52365.5</td>\n      <td>37081.0</td>\n      <td>3504</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>5791.5</td>\n      <td>5101.8</td>\n      <td>428</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>28118.2</td>\n      <td>16197.5</td>\n      <td>1990</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>15158.0</td>\n      <td>16765.1</td>\n      <td>1042</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>81838.9</td>\n      <td>53638.2</td>\n      <td>0</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=114}\n``` {.python .cell-code}\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=114}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>15106.3</td>\n      <td>19270.9</td>\n      <td>1066</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>4495.7</td>\n      <td>4067.8</td>\n      <td>382</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>19826.4</td>\n      <td>15163.5</td>\n      <td>1406</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>10111.2</td>\n      <td>14776.3</td>\n      <td>770</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>70013.9</td>\n      <td>102546.4</td>\n      <td>0</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## **Exploratory Data Analysis 2**\n\n### **(Gun Sales Data)**\n\n*In this section, I will answer the following research questions*:\n\n> Year Level Questions: - *How many guns were sold in the U.S. in 2006?* - *What kind of gun was bought the most?* - *What are the overall monthly trends of gun purchases in 2006?*\n>\n> State Level Questions\n>\n> -   What are the top 5 states in terms of gun purchases in the U.S. in 2006?\n>\n> -   What are the most bought gun types in those states?\n>\n> -   What kind of gun was bought the most in one of those states?\n>\n> -   What are the overall monthly trends of gun purchases in those states?\n>\n> Which states had the highest growth in gun sales over the span of a decade?\n\n## 2006\n\n::: {.cell execution_count=115}\n``` {.python .cell-code}\ndf2_2006 = pd.read_csv('Data/df2_2006.csv', index_col=0)\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=115}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>11031.9</td>\n      <td>28608.8</td>\n      <td>882</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2190.1</td>\n      <td>3166.9</td>\n      <td>162</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>9188.3</td>\n      <td>12136.3</td>\n      <td>690</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4814.7</td>\n      <td>17008.2</td>\n      <td>460</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>17902.5</td>\n      <td>22993.3</td>\n      <td>15684</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=116}\n``` {.python .cell-code}\ndf2_2006.describe().T\n```\n\n::: {.cell-output .cell-output-display execution_count=116}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>handgun</th>\n      <td>660.0</td>\n      <td>4068.875000</td>\n      <td>4725.841945</td>\n      <td>0.0</td>\n      <td>671.00</td>\n      <td>2560.25</td>\n      <td>5929.00</td>\n      <td>27432.9</td>\n    </tr>\n    <tr>\n      <th>long_gun</th>\n      <td>660.0</td>\n      <td>7982.651667</td>\n      <td>9051.901614</td>\n      <td>0.0</td>\n      <td>2091.10</td>\n      <td>5649.60</td>\n      <td>10799.80</td>\n      <td>68093.3</td>\n    </tr>\n    <tr>\n      <th>multiple</th>\n      <td>660.0</td>\n      <td>394.293939</td>\n      <td>779.232091</td>\n      <td>0.0</td>\n      <td>55.50</td>\n      <td>232.00</td>\n      <td>522.00</td>\n      <td>15684.0</td>\n    </tr>\n    <tr>\n      <th>month</th>\n      <td>660.0</td>\n      <td>6.500000</td>\n      <td>3.454671</td>\n      <td>1.0</td>\n      <td>3.75</td>\n      <td>6.50</td>\n      <td>9.25</td>\n      <td>12.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=117}\n``` {.python .cell-code}\n# plotting the kde of the variables to have a sense of the data distribution\n# check how to change line color\n\nsns.set_style('darkgrid')\n\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=(20, 4))\n\ndf2_2006[\"handgun\"].plot.kde(ax=ax1)\nax1.set_title('KDE plot for handgun')\n\ndf2_2006[\"long_gun\"].plot.kde(ax=ax2)\nax2.set_title('KDE plot for long_gun')\n\ndf2_2006[\"multiple\"].plot.kde(ax=ax3)\nax3.set_title('KDE plot for multiple')\n\ndf2_2006[\"month\"].plot.kde(ax=ax4)\nax4.set_title('KDE plot for month')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-118-output-1.png){width=1582 height=356}\n:::\n:::\n\n\n### Year Level Questions\n\n-   How many guns were sold in the U.S. in 2006?\n\n-   What kind of gun was bought the most?\n\n-   What are the overall monthly trends of gun purchases in 2006?\n\n*How many guns were sold in the U.S. in 2006?*\n\n::: {.cell execution_count=118}\n``` {.python .cell-code}\ndf2_2006[['handgun', 'long_gun', 'multiple']].sum().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=118}\n```\n8214241.6000000015\n```\n:::\n:::\n\n\n*What type of gun sold the most?*\n\n::: {.cell execution_count=119}\n``` {.python .cell-code}\nsns.set_style('darkgrid')\nfig, ax = plt.subplots(figsize=(8,6))\n\nd = df2_2006[['handgun', 'long_gun', 'multiple']].sum().sort_values(ascending=False)\n\ndf2_2006[['handgun', 'long_gun', 'multiple']].sum().plot.barh(table=d)\nplt.setp(ax.get_xticklabels(), y=.05)\nplt.setp(ax.get_xticklines(), visible=False)\n\nprint(df2_2006[['handgun', 'long_gun', 'multiple']].sum().sort_values(ascending=False))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlong_gun    5268550.1\nhandgun     2685457.5\nmultiple     260234.0\ndtype: float64\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-120-output-2.png){width=680 height=527}\n:::\n:::\n\n\n*What is the trend of gun sales throughout the year in 2006?*\n\n::: {.cell execution_count=120}\n``` {.python .cell-code}\ndf2_2006.groupby('month')[['handgun', 'long_gun', 'multiple']].sum().plot.line(title='Monthly Trends of Gun Sales in 2006')\n```\n\n::: {.cell-output .cell-output-display execution_count=120}\n```\n<Axes: title={'center': 'Monthly Trends of Gun Sales in 2006'}, xlabel='month'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-121-output-2.png){width=594 height=447}\n:::\n:::\n\n\n### **State Level Questions**\n\n-   What are the top 5 states in terms of gun purchases in the U.S. in 2006?\n\n-   What are the most bought gun types in those states?\n\n-   What are the overall monthly trends of gun purchases in those states?\n\n*What are the top 5 states in terms of gun purchases in the U.S. in 2006?*\n\n::: {.cell execution_count=121}\n``` {.python .cell-code}\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=121}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>11031.9</td>\n      <td>28608.8</td>\n      <td>882</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2190.1</td>\n      <td>3166.9</td>\n      <td>162</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>9188.3</td>\n      <td>12136.3</td>\n      <td>690</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4814.7</td>\n      <td>17008.2</td>\n      <td>460</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>17902.5</td>\n      <td>22993.3</td>\n      <td>15684</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=122}\n``` {.python .cell-code}\ndf2_2006['total'] = df2_2006['handgun'] + df2_2006['long_gun'] + df2_2006['multiple']\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=122}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>11031.9</td>\n      <td>28608.8</td>\n      <td>882</td>\n      <td>12</td>\n      <td>40522.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2190.1</td>\n      <td>3166.9</td>\n      <td>162</td>\n      <td>12</td>\n      <td>5519.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>9188.3</td>\n      <td>12136.3</td>\n      <td>690</td>\n      <td>12</td>\n      <td>22014.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4814.7</td>\n      <td>17008.2</td>\n      <td>460</td>\n      <td>12</td>\n      <td>22282.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>17902.5</td>\n      <td>22993.3</td>\n      <td>15684</td>\n      <td>12</td>\n      <td>56579.8</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=123}\n``` {.python .cell-code}\nsns.set_style('darkgrid')\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))\n\ndf2_2006.groupby('state')['total'].sum().sort_values(ascending=False).head().plot.barh(ax=ax1, title='Top 5 States by Gun Sales')\ndf2_2006.groupby('state')[['handgun', 'long_gun', 'multiple','total']].sum().nlargest(5, 'total').plot.bar(ax=ax2, title='Breakdown of Gun Sales by Type')\n```\n\n::: {.cell-output .cell-output-display execution_count=123}\n```\n<Axes: title={'center': 'Breakdown of Gun Sales by Type'}, xlabel='state'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-124-output-2.png){width=1018 height=514}\n:::\n:::\n\n\n*What are the top 5 states in terms of gun purchases in the U.S. in 2006?*\n\n*What are the most bought gun types in those states?*\n\n::: {.cell execution_count=124}\n``` {.python .cell-code}\n# What are the overall monthly trends of gun purchases overall and in those top 5 states?\n# i.e month on x, sales on y, faceted by states\n\ndf2_2006.groupby('month')['total'].sum().plot.line(title = 'Overall Monthly Trend of Gun Sales in the U.S. in 2006')\n```\n\n::: {.cell-output .cell-output-display execution_count=124}\n```\n<Axes: title={'center': 'Overall Monthly Trend of Gun Sales in the U.S. in 2006'}, xlabel='month'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-125-output-2.png){width=568 height=447}\n:::\n:::\n\n\n::: {.cell execution_count=125}\n``` {.python .cell-code}\nfig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(1, 5, figsize=(25, 5))\ncrit_1 = df2_2006.state == 'Texas'\ncrit_2 = df2_2006.state == 'Pennsylvania'\ncrit_3 = df2_2006.state == 'California'\ncrit_4 = df2_2006.state == 'Florida'\ncrit_5 = df2_2006.state == 'Ohio'\n\ndf2_2006[crit_1].groupby('month')['total'].sum().plot.line(\n    ax=ax1, title='Monthly Gun Sales Trends in Texas')\ndf2_2006[crit_2].groupby('month')['total'].sum().plot.line(\n    ax=ax2, title='Monthly Gun Sales Trends in Pennsylvania')\ndf2_2006[crit_3].groupby('month')['total'].sum().plot.line(\n    ax=ax3, title='Monthly Gun Sales Trends in California')\ndf2_2006[crit_4].groupby('month')['total'].sum().plot.line(\n    ax=ax4, title='Monthly Gun Sales Trends in Florida')\ndf2_2006[crit_5].groupby('month')['total'].sum().plot.line(\n    ax=ax5, title='Monthly Gun Sales Trends in Ohio')\n\n```\n\n::: {.cell-output .cell-output-display execution_count=125}\n```\n<Axes: title={'center': 'Monthly Gun Sales Trends in Ohio'}, xlabel='month'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-126-output-2.png){width=1933 height=447}\n:::\n:::\n\n\n## 2016\n\n::: {.cell execution_count=126}\n``` {.python .cell-code}\n# reading in the data\ndf2_2016 = pd.read_csv('Data/df2_2016.csv', index_col=0)\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=126}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>15106.3</td>\n      <td>19270.9</td>\n      <td>1066</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>4495.7</td>\n      <td>4067.8</td>\n      <td>382</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>19826.4</td>\n      <td>15163.5</td>\n      <td>1406</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>10111.2</td>\n      <td>14776.3</td>\n      <td>770</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>70013.9</td>\n      <td>102546.4</td>\n      <td>0</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=127}\n``` {.python .cell-code}\n# deriving summary statistics\ndf2_2016.describe().T\n```\n\n::: {.cell-output .cell-output-display execution_count=127}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>handgun</th>\n      <td>660.0</td>\n      <td>13475.830000</td>\n      <td>15766.508622</td>\n      <td>0.0</td>\n      <td>2685.925</td>\n      <td>7737.95</td>\n      <td>18134.325</td>\n      <td>79888.6</td>\n    </tr>\n    <tr>\n      <th>long_gun</th>\n      <td>660.0</td>\n      <td>9980.851667</td>\n      <td>10916.172474</td>\n      <td>0.0</td>\n      <td>3268.650</td>\n      <td>6524.10</td>\n      <td>14035.450</td>\n      <td>102546.4</td>\n    </tr>\n    <tr>\n      <th>multiple</th>\n      <td>660.0</td>\n      <td>780.978788</td>\n      <td>1099.305994</td>\n      <td>0.0</td>\n      <td>16.000</td>\n      <td>401.00</td>\n      <td>1058.000</td>\n      <td>7782.0</td>\n    </tr>\n    <tr>\n      <th>month</th>\n      <td>660.0</td>\n      <td>6.500000</td>\n      <td>3.454671</td>\n      <td>1.0</td>\n      <td>3.750</td>\n      <td>6.50</td>\n      <td>9.250</td>\n      <td>12.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=128}\n``` {.python .cell-code}\n# plotting the kde of the variables to have a sense of the data distribution\n# check how to change line color\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=(20, 4))\n\ndf2_2016[\"handgun\"].plot.kde(ax=ax1)\nax1.set_title('KDE plot for handgun')\n\ndf2_2016[\"long_gun\"].plot.kde(ax=ax2)\nax2.set_title('KDE plot for long_gun')\n\ndf2_2016[\"multiple\"].plot.kde(ax=ax3)\nax3.set_title('KDE plot for multiple')\n\ndf2_2016[\"month\"].plot.kde(ax=ax4)\nax4.set_title('KDE plot for month')\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-129-output-1.png){width=1541 height=356}\n:::\n:::\n\n\n### Year Level Questions\n\n-   How many guns were sold in the U.S. in 2016?\n\n-   What kind of gun was bought the most?\n\n-   What are the overall monthly trends of gun purchases in 2016?\n\n*How many guns were sold in the U.S. in 2016?*\n\n::: {.cell execution_count=129}\n``` {.python .cell-code}\ndf2_2016[['handgun', 'long_gun', 'multiple']].sum().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=129}\n```\n15996855.9\n```\n:::\n:::\n\n\n*what type of gun sold the most?*\n\n::: {.cell execution_count=130}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize=(8,6))\n\nd = df2_2016[['handgun', 'long_gun', 'multiple']].sum().sort_values(ascending=False)\n\ndf2_2016[['handgun', 'long_gun', 'multiple']].sum().plot.barh(table=d)\nplt.setp(ax.get_xticklabels(), y=.05)\nplt.setp(ax.get_xticklines(), visible=False)\n\nprint(df2_2016[['handgun', 'long_gun', 'multiple']].sum().sort_values(ascending=False))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhandgun     8894047.8\nlong_gun    6587362.1\nmultiple     515446.0\ndtype: float64\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-131-output-2.png){width=680 height=527}\n:::\n:::\n\n\n*Trend of gun sales throughout the year in 2016*\n\n::: {.cell execution_count=131}\n``` {.python .cell-code}\ndf2_2016.groupby('month')[['handgun', 'long_gun', 'multiple']].sum().plot.line(title='Monthly Trends of Gun Sales in 2016')\n```\n\n::: {.cell-output .cell-output-display execution_count=131}\n```\n<Axes: title={'center': 'Monthly Trends of Gun Sales in 2016'}, xlabel='month'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-132-output-2.png){width=594 height=447}\n:::\n:::\n\n\n### **State Level Questions**\n\n-   What are the top 5 states in terms of gun purchases in the U.S. in 2016?\n-   What are the most bought gun types in those states?\n-   What was the most purchased gun in those states?\n-   What are the overall monthly trends of gun purchases in those states?\n\n::: {.cell execution_count=132}\n``` {.python .cell-code}\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=132}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>15106.3</td>\n      <td>19270.9</td>\n      <td>1066</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>4495.7</td>\n      <td>4067.8</td>\n      <td>382</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>19826.4</td>\n      <td>15163.5</td>\n      <td>1406</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>10111.2</td>\n      <td>14776.3</td>\n      <td>770</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>70013.9</td>\n      <td>102546.4</td>\n      <td>0</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=133}\n``` {.python .cell-code}\ndf2_2016['total'] = df2_2016['handgun'] + df2_2016['long_gun'] + df2_2016['multiple']\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=133}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>15106.3</td>\n      <td>19270.9</td>\n      <td>1066</td>\n      <td>12</td>\n      <td>35443.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>4495.7</td>\n      <td>4067.8</td>\n      <td>382</td>\n      <td>12</td>\n      <td>8945.5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>19826.4</td>\n      <td>15163.5</td>\n      <td>1406</td>\n      <td>12</td>\n      <td>36395.9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>10111.2</td>\n      <td>14776.3</td>\n      <td>770</td>\n      <td>12</td>\n      <td>25657.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>70013.9</td>\n      <td>102546.4</td>\n      <td>0</td>\n      <td>12</td>\n      <td>172560.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n*What are the top 5 states in terms of gun purchases in the U.S. in 2016?* *What are the most bought gun types in those states?*\n\n::: {.cell execution_count=134}\n``` {.python .cell-code}\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))\n\ndf2_2016.groupby('state')['total'].sum().sort_values(ascending=False).head().plot.barh(ax=ax1, title='Top 5 States by Gun Sales')\ndf2_2016.groupby('state')[['handgun', 'long_gun', 'multiple','total']].sum().nlargest(5, 'total').plot.bar(ax=ax2, title='Breakdown of Gun Sales by Type')\n```\n\n::: {.cell-output .cell-output-display execution_count=134}\n```\n<Axes: title={'center': 'Breakdown of Gun Sales by Type'}, xlabel='state'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-135-output-2.png){width=1018 height=514}\n:::\n:::\n\n\n*What are the overall monthly trends of gun purchases?*\n\n::: {.cell execution_count=135}\n``` {.python .cell-code}\ndf2_2016.groupby('month')['total'].sum().plot.line(title = 'Overall Monthly Trend of Gun Sales in the U.S. in 2016')\n```\n\n::: {.cell-output .cell-output-display execution_count=135}\n```\n<Axes: title={'center': 'Overall Monthly Trend of Gun Sales in the U.S. in 2016'}, xlabel='month'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-136-output-2.png){width=568 height=447}\n:::\n:::\n\n\n::: {.cell execution_count=136}\n``` {.python .cell-code}\nfig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(1,5, figsize=(25,5))\ncrit_1 = df2_2016.state == 'Texas'\ncrit_2 = df2_2016.state == 'California'\ncrit_3 = df2_2016.state == 'Florida'\ncrit_4 = df2_2016.state == 'Pennsylvania'\ncrit_5 = df2_2016.state == 'Ohio'\n\ndf2_2016[crit_1].groupby('month')['total'].sum().plot.line(ax=ax1, title='Monthly Gun Sales Trends in Texas')\ndf2_2016[crit_2].groupby('month')['total'].sum().plot.line(ax=ax2, title='Monthly Gun Sales Trends in California')\ndf2_2016[crit_3].groupby('month')['total'].sum().plot.line(ax=ax3, title='Monthly Gun Sales Trends in Florida')\ndf2_2016[crit_4].groupby('month')['total'].sum().plot.line(ax=ax4, title='Monthly Gun Sales Trends in Pennsylvania')\ndf2_2016[crit_5].groupby('month')['total'].sum().plot.line(ax=ax5, title='Monthly Gun Sales Trends in Ohio')\n\n```\n\n::: {.cell-output .cell-output-display execution_count=136}\n```\n<Axes: title={'center': 'Monthly Gun Sales Trends in Ohio'}, xlabel='month'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-137-output-2.png){width=1933 height=447}\n:::\n:::\n\n\n*Which states have the highest growth in gun registrations over the span of a decade?* \n\n**To answer this question, I will:**\n\n1.  Load the 2016 dataframe\n\n2.  Create a new column named `total` which is the sum of the three form of gun sales\n\n3.  Drop the individual form of gun sales as they are now irrelevant to the research question\n\n4.  Rename the columns for clarity\n\n5.  Follow the above procedure for the 2006 dataframe\n\n6.  Merge both dataframes on `state` \n\n7.  Subtract `total_2016` from total_2006' to get a column for change\n\n8.  Create a percentage change column\n\n9.  Sort the dataframe by `%_change` and visualize the result\n\n::: {.cell execution_count=137}\n``` {.python .cell-code}\n# 2016 dataframe is loaded\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=137}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>15106.3</td>\n      <td>19270.9</td>\n      <td>1066</td>\n      <td>12</td>\n      <td>35443.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>4495.7</td>\n      <td>4067.8</td>\n      <td>382</td>\n      <td>12</td>\n      <td>8945.5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>19826.4</td>\n      <td>15163.5</td>\n      <td>1406</td>\n      <td>12</td>\n      <td>36395.9</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>10111.2</td>\n      <td>14776.3</td>\n      <td>770</td>\n      <td>12</td>\n      <td>25657.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>70013.9</td>\n      <td>102546.4</td>\n      <td>0</td>\n      <td>12</td>\n      <td>172560.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=138}\n``` {.python .cell-code}\ndf2_2016['total'] = df2_2016['handgun'] + df2_2016['long_gun'] + df2_2016['multiple']\n```\n:::\n\n\n::: {.cell execution_count=139}\n``` {.python .cell-code}\n# aggregating df2 on the gun sales columns\ndf2_2016 = df2_2016.groupby('state')[['handgun','long_gun','multiple', 'total']].sum()\n```\n:::\n\n\n::: {.cell execution_count=140}\n``` {.python .cell-code}\n# dropping columns\ncols = ['handgun', 'long_gun', 'multiple']\ndf2_2016.drop(columns=cols, inplace=True)\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=140}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>315684.6</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>86447.8</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>319165.2</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>187400.4</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>1226395.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=141}\n``` {.python .cell-code}\n# renaming for clarity\ndf2_2016.rename(columns=lambda x: x + \"_2016\", inplace=True)\ndf2_2016.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=141}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_2016</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>315684.6</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>86447.8</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>319165.2</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>187400.4</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>1226395.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nNow I follow the sme procedures for the 2006 dataframe\n\n::: {.cell execution_count=142}\n``` {.python .cell-code}\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=142}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n      <th>total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>11031.9</td>\n      <td>28608.8</td>\n      <td>882</td>\n      <td>12</td>\n      <td>40522.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>2190.1</td>\n      <td>3166.9</td>\n      <td>162</td>\n      <td>12</td>\n      <td>5519.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>9188.3</td>\n      <td>12136.3</td>\n      <td>690</td>\n      <td>12</td>\n      <td>22014.6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>4814.7</td>\n      <td>17008.2</td>\n      <td>460</td>\n      <td>12</td>\n      <td>22282.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>17902.5</td>\n      <td>22993.3</td>\n      <td>15684</td>\n      <td>12</td>\n      <td>56579.8</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=143}\n``` {.python .cell-code}\ndf2_2006['total'] = df2_2006['handgun'] + df2_2006['long_gun'] + df2_2006['multiple']\n```\n:::\n\n\n::: {.cell execution_count=144}\n``` {.python .cell-code}\ndf2_2006 = df2_2006.groupby('state')[['handgun','long_gun','multiple', 'total']].sum()\n```\n:::\n\n\n::: {.cell execution_count=145}\n``` {.python .cell-code}\ncols = ['handgun', 'long_gun', 'multiple']\ndf2_2006.drop(columns=cols, inplace=True)\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=145}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>232324.7</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>48404.4</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>177284.5</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>142397.6</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>504970.9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=146}\n``` {.python .cell-code}\n# rename columns for clarity\ndf2_2006.rename(columns=lambda x: x + \"_2006\", inplace=True)\ndf2_2006.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=146}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_2006</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>232324.7</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>48404.4</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>177284.5</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>142397.6</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>504970.9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nNow, I merge both dataframes on ‘state’\n\n::: {.cell execution_count=147}\n``` {.python .cell-code}\n# merging the dataframe\ncombined_df = df2_2016.merge(df2_2006, on='state', how='inner')\ncombined_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=147}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_2016</th>\n      <th>total_2006</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>315684.6</td>\n      <td>232324.7</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>86447.8</td>\n      <td>48404.4</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>319165.2</td>\n      <td>177284.5</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>187400.4</td>\n      <td>142397.6</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>1226395.5</td>\n      <td>504970.9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=148}\n``` {.python .cell-code}\n# add column for total_change\ncombined_df['total_change'] = combined_df['total_2016'] - combined_df['total_2006']\ncombined_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=148}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_2016</th>\n      <th>total_2006</th>\n      <th>total_change</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>315684.6</td>\n      <td>232324.7</td>\n      <td>83359.9</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>86447.8</td>\n      <td>48404.4</td>\n      <td>38043.4</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>319165.2</td>\n      <td>177284.5</td>\n      <td>141880.7</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>187400.4</td>\n      <td>142397.6</td>\n      <td>45002.8</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>1226395.5</td>\n      <td>504970.9</td>\n      <td>721424.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=149}\n``` {.python .cell-code}\n# adding a column for % change and rounding to 2 d.f.\ncombined_df['%_change'] = ((combined_df['total_change'] / combined_df['total_2006']) * 100).round(2)\ncombined_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=149}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_2016</th>\n      <th>total_2006</th>\n      <th>total_change</th>\n      <th>%_change</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>315684.6</td>\n      <td>232324.7</td>\n      <td>83359.9</td>\n      <td>35.88</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>86447.8</td>\n      <td>48404.4</td>\n      <td>38043.4</td>\n      <td>78.59</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>319165.2</td>\n      <td>177284.5</td>\n      <td>141880.7</td>\n      <td>80.03</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>187400.4</td>\n      <td>142397.6</td>\n      <td>45002.8</td>\n      <td>31.60</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>1226395.5</td>\n      <td>504970.9</td>\n      <td>721424.6</td>\n      <td>142.86</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=150}\n``` {.python .cell-code}\n# states with the greatest changes in gun sales from 2006 to 2016\ncombined_df.sort_values(by='%_change', ascending=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=150}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_2016</th>\n      <th>total_2006</th>\n      <th>total_change</th>\n      <th>%_change</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Guam</th>\n      <td>2233.9</td>\n      <td>390.9</td>\n      <td>1843.0</td>\n      <td>471.48</td>\n    </tr>\n    <tr>\n      <th>Illinois</th>\n      <td>606898.6</td>\n      <td>181086.6</td>\n      <td>425812.0</td>\n      <td>235.14</td>\n    </tr>\n    <tr>\n      <th>New Jersey</th>\n      <td>131282.8</td>\n      <td>41572.1</td>\n      <td>89710.7</td>\n      <td>215.80</td>\n    </tr>\n    <tr>\n      <th>Connecticut</th>\n      <td>182806.8</td>\n      <td>58656.7</td>\n      <td>124150.1</td>\n      <td>211.66</td>\n    </tr>\n    <tr>\n      <th>Massachusetts</th>\n      <td>134658.8</td>\n      <td>43577.9</td>\n      <td>91080.9</td>\n      <td>209.01</td>\n    </tr>\n    <tr>\n      <th>Delaware</th>\n      <td>54120.0</td>\n      <td>18561.4</td>\n      <td>35558.6</td>\n      <td>191.57</td>\n    </tr>\n    <tr>\n      <th>District of Columbia</th>\n      <td>811.3</td>\n      <td>279.0</td>\n      <td>532.3</td>\n      <td>190.79</td>\n    </tr>\n    <tr>\n      <th>Rhode Island</th>\n      <td>30910.6</td>\n      <td>11853.8</td>\n      <td>19056.8</td>\n      <td>160.77</td>\n    </tr>\n    <tr>\n      <th>Indiana</th>\n      <td>519104.0</td>\n      <td>200853.4</td>\n      <td>318250.6</td>\n      <td>158.45</td>\n    </tr>\n    <tr>\n      <th>New Hampshire</th>\n      <td>124641.0</td>\n      <td>48451.3</td>\n      <td>76189.7</td>\n      <td>157.25</td>\n    </tr>\n    <tr>\n      <th>Florida</th>\n      <td>1126678.0</td>\n      <td>448412.9</td>\n      <td>678265.1</td>\n      <td>151.26</td>\n    </tr>\n    <tr>\n      <th>Missouri</th>\n      <td>550714.2</td>\n      <td>222703.8</td>\n      <td>328010.4</td>\n      <td>147.29</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>1226395.5</td>\n      <td>504970.9</td>\n      <td>721424.6</td>\n      <td>142.86</td>\n    </tr>\n    <tr>\n      <th>Tennessee</th>\n      <td>604447.0</td>\n      <td>257610.1</td>\n      <td>346836.9</td>\n      <td>134.64</td>\n    </tr>\n    <tr>\n      <th>Washington</th>\n      <td>417704.5</td>\n      <td>190076.1</td>\n      <td>227628.4</td>\n      <td>119.76</td>\n    </tr>\n    <tr>\n      <th>Colorado</th>\n      <td>493366.8</td>\n      <td>227299.8</td>\n      <td>266067.0</td>\n      <td>117.06</td>\n    </tr>\n    <tr>\n      <th>Ohio</th>\n      <td>735052.3</td>\n      <td>343179.8</td>\n      <td>391872.5</td>\n      <td>114.19</td>\n    </tr>\n    <tr>\n      <th>New York</th>\n      <td>368982.5</td>\n      <td>173129.4</td>\n      <td>195853.1</td>\n      <td>113.13</td>\n    </tr>\n    <tr>\n      <th>Virginia</th>\n      <td>556531.8</td>\n      <td>265476.9</td>\n      <td>291054.9</td>\n      <td>109.63</td>\n    </tr>\n    <tr>\n      <th>Maryland</th>\n      <td>137290.7</td>\n      <td>65591.9</td>\n      <td>71698.8</td>\n      <td>109.31</td>\n    </tr>\n    <tr>\n      <th>South Carolina</th>\n      <td>250854.6</td>\n      <td>126091.3</td>\n      <td>124763.3</td>\n      <td>98.95</td>\n    </tr>\n    <tr>\n      <th>Texas</th>\n      <td>1297197.5</td>\n      <td>657275.5</td>\n      <td>639922.0</td>\n      <td>97.36</td>\n    </tr>\n    <tr>\n      <th>Maine</th>\n      <td>110103.5</td>\n      <td>56676.4</td>\n      <td>53427.1</td>\n      <td>94.27</td>\n    </tr>\n    <tr>\n      <th>Oklahoma</th>\n      <td>347686.5</td>\n      <td>179211.3</td>\n      <td>168475.2</td>\n      <td>94.01</td>\n    </tr>\n    <tr>\n      <th>Oregon</th>\n      <td>353919.5</td>\n      <td>182485.6</td>\n      <td>171433.9</td>\n      <td>93.94</td>\n    </tr>\n    <tr>\n      <th>Wisconsin</th>\n      <td>381738.4</td>\n      <td>205512.6</td>\n      <td>176225.8</td>\n      <td>85.75</td>\n    </tr>\n    <tr>\n      <th>Vermont</th>\n      <td>42660.3</td>\n      <td>23028.2</td>\n      <td>19632.1</td>\n      <td>85.25</td>\n    </tr>\n    <tr>\n      <th>Puerto Rico</th>\n      <td>17264.5</td>\n      <td>9504.8</td>\n      <td>7759.7</td>\n      <td>81.64</td>\n    </tr>\n    <tr>\n      <th>South Dakota</th>\n      <td>99014.2</td>\n      <td>54671.6</td>\n      <td>44342.6</td>\n      <td>81.11</td>\n    </tr>\n    <tr>\n      <th>Nevada</th>\n      <td>122135.3</td>\n      <td>67496.1</td>\n      <td>54639.2</td>\n      <td>80.95</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>319165.2</td>\n      <td>177284.5</td>\n      <td>141880.7</td>\n      <td>80.03</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>86447.8</td>\n      <td>48404.4</td>\n      <td>38043.4</td>\n      <td>78.59</td>\n    </tr>\n    <tr>\n      <th>New Mexico</th>\n      <td>145071.8</td>\n      <td>83798.5</td>\n      <td>61273.3</td>\n      <td>73.12</td>\n    </tr>\n    <tr>\n      <th>Louisiana</th>\n      <td>358999.0</td>\n      <td>214295.7</td>\n      <td>144703.3</td>\n      <td>67.53</td>\n    </tr>\n    <tr>\n      <th>West Virginia</th>\n      <td>201117.9</td>\n      <td>122062.6</td>\n      <td>79055.3</td>\n      <td>64.77</td>\n    </tr>\n    <tr>\n      <th>Minnesota</th>\n      <td>315347.5</td>\n      <td>193136.1</td>\n      <td>122211.4</td>\n      <td>63.28</td>\n    </tr>\n    <tr>\n      <th>North Dakota</th>\n      <td>61330.8</td>\n      <td>38198.7</td>\n      <td>23132.1</td>\n      <td>60.56</td>\n    </tr>\n    <tr>\n      <th>Idaho</th>\n      <td>117137.4</td>\n      <td>72988.4</td>\n      <td>44149.0</td>\n      <td>60.49</td>\n    </tr>\n    <tr>\n      <th>Kansas</th>\n      <td>178892.4</td>\n      <td>112153.3</td>\n      <td>66739.1</td>\n      <td>59.51</td>\n    </tr>\n    <tr>\n      <th>Michigan</th>\n      <td>328993.7</td>\n      <td>209450.2</td>\n      <td>119543.5</td>\n      <td>57.07</td>\n    </tr>\n    <tr>\n      <th>Pennsylvania</th>\n      <td>880410.3</td>\n      <td>571519.3</td>\n      <td>308891.0</td>\n      <td>54.05</td>\n    </tr>\n    <tr>\n      <th>Mississippi</th>\n      <td>243585.2</td>\n      <td>168252.6</td>\n      <td>75332.6</td>\n      <td>44.77</td>\n    </tr>\n    <tr>\n      <th>Montana</th>\n      <td>109175.1</td>\n      <td>75877.6</td>\n      <td>33297.5</td>\n      <td>43.88</td>\n    </tr>\n    <tr>\n      <th>Wyoming</th>\n      <td>55812.4</td>\n      <td>39540.8</td>\n      <td>16271.6</td>\n      <td>41.15</td>\n    </tr>\n    <tr>\n      <th>Alabama</th>\n      <td>315684.6</td>\n      <td>232324.7</td>\n      <td>83359.9</td>\n      <td>35.88</td>\n    </tr>\n    <tr>\n      <th>Georgia</th>\n      <td>370340.7</td>\n      <td>273600.3</td>\n      <td>96740.4</td>\n      <td>35.36</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>187400.4</td>\n      <td>142397.6</td>\n      <td>45002.8</td>\n      <td>31.60</td>\n    </tr>\n    <tr>\n      <th>North Carolina</th>\n      <td>218489.4</td>\n      <td>166084.1</td>\n      <td>52405.3</td>\n      <td>31.55</td>\n    </tr>\n    <tr>\n      <th>Kentucky</th>\n      <td>288612.1</td>\n      <td>226781.0</td>\n      <td>61831.1</td>\n      <td>27.26</td>\n    </tr>\n    <tr>\n      <th>Utah</th>\n      <td>114069.4</td>\n      <td>95817.3</td>\n      <td>18252.1</td>\n      <td>19.05</td>\n    </tr>\n    <tr>\n      <th>Virgin Islands</th>\n      <td>365.3</td>\n      <td>354.5</td>\n      <td>10.8</td>\n      <td>3.05</td>\n    </tr>\n    <tr>\n      <th>Nebraska</th>\n      <td>31196.1</td>\n      <td>32570.0</td>\n      <td>-1373.9</td>\n      <td>-4.22</td>\n    </tr>\n    <tr>\n      <th>Iowa</th>\n      <td>41988.4</td>\n      <td>51636.0</td>\n      <td>-9647.6</td>\n      <td>-18.68</td>\n    </tr>\n    <tr>\n      <th>Mariana Islands</th>\n      <td>17.6</td>\n      <td>25.3</td>\n      <td>-7.7</td>\n      <td>-30.43</td>\n    </tr>\n    <tr>\n      <th>Hawaii</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nVisualizing results\n\n::: {.cell execution_count=151}\n``` {.python .cell-code}\ncombined_df['%_change'].head(10).plot.line(\n    x='state', y='%_change', title='', figsize=(20, 4))\n```\n\n::: {.cell-output .cell-output-display execution_count=151}\n```\n<Axes: xlabel='state'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-152-output-2.png){width=1539 height=354}\n:::\n:::\n\n\n## Which census data variables are most associated with gun sales data?\n\n*To answer this question, I proceed merge the dataframes*\n\n::: {.cell execution_count=152}\n``` {.python .cell-code}\n# reading in the census data\ndf1 = pd.read_csv('Data/df_census_cleaned_v2.csv')\ndf1.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=152}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>pe_hh</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>4863300.0</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>2.55</td>\n      <td>10.7</td>\n      <td>61.3</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>17.1</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>741894.0</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>2.81</td>\n      <td>15.5</td>\n      <td>64.4</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>9.9</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>6931071.0</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>2.69</td>\n      <td>11.9</td>\n      <td>59.6</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>16.4</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>2988248.0</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>2.53</td>\n      <td>9.3</td>\n      <td>60.1</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>17.2</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>39250017.0</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>2.96</td>\n      <td>8.3</td>\n      <td>63.2</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>14.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>3548449.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### **Data Dictionary**\n\n| s/n | Variable                | Description                                                                 |\n|:-----------------------|:-----------------------|:-----------------------|\n| 0   | state                   | Each of the 50 states of the contiguous U.S.                                |\n| 1   | pop_2016                | Population estimates by July 1, 2016                                        |\n| 2   | female_pct              | Female persons, percent, by July 1, 2016                                    |\n| 3   | white_pct               | White alone, percent, by July 1, 2016                                       |\n| 4   | black_pct               | Black or African American alone, percent by July 1, 2016                    |\n| 5   | asian_pct               | Asian alone, percent, July 1, 2016                                          |\n| 6   | pe_hh                   | Persons per household, 2011-2015                                            |\n| 7   | pe_whi                  | Persons without health insurance, under age 65 years, percent               |\n| 8   | adults_below_65         | adults older than 18, younger than 65, percent, 2016                        |\n| 9   | high_school_grad_higher | High school graduate or higher, percent of persons age 25 years+, 2011-2015 |\n| 10  | bsc_higher              | Bachelor's degree or higher, percent of persons age 25 years+, 2011-2015    |\n| 11  | median_hu               | Median value of owner-occupied housing units, 2011-2015                     |\n| 12  | median_gross_rent       | Median gross rent, 2011-2015                                                |\n| 13  | poverty_pct             | Persons in poverty, percent                                                 |\n| 14  | median_hh_income        | Median household income (in 2015 dollars), 2011-2015                        |\n| 15  | per_cap_inc             | Per capita income in past 12 months (in 2015 dollars), 2011-2015            |\n| 16  | firms                   | All firms, 2012                                                             |\n\n::: {.cell execution_count=153}\n``` {.python .cell-code}\n# reading in the gun data \ndf2 = pd.read_csv('Data/df2_2016.csv', index_col=0)\ndf2.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=153}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>month</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>15106.3</td>\n      <td>19270.9</td>\n      <td>1066</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>4495.7</td>\n      <td>4067.8</td>\n      <td>382</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>19826.4</td>\n      <td>15163.5</td>\n      <td>1406</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>10111.2</td>\n      <td>14776.3</td>\n      <td>770</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>70013.9</td>\n      <td>102546.4</td>\n      <td>0</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### **Data Dictionary**\n\n| s/n | Variable | Description                                                  |\n|:-----------------------|:-----------------------|:-----------------------|\n| 0   | state    | Each of the 55 states and territories of the .U.S.           |\n| 1   | handgun  | handgun checks, transformed into sales by a factor of 1.1    |\n| 2   | long_gun | long-gun checks, transformed into sales by a factor of 1.1   |\n| 3   | multiple | multiple gun checks, transformed into sales by a factor of 2 |\n| 4   | month    | months of 2016                                               |\n\n::: {.cell execution_count=154}\n``` {.python .cell-code}\n# number of unique states in census dataframe\ndf1.state.nunique()\n```\n\n::: {.cell-output .cell-output-display execution_count=154}\n```\n50\n```\n:::\n:::\n\n\n::: {.cell execution_count=155}\n``` {.python .cell-code}\n# number of unique states in gun sales dataframe\ndf2.state.nunique()\n```\n\n::: {.cell-output .cell-output-display execution_count=155}\n```\n55\n```\n:::\n:::\n\n\n::: {.cell execution_count=156}\n``` {.python .cell-code}\n# getting the uncommon territories in both datasets\ns1 = df1.state\ns2 = df2.state.unique()\ncommon_states = s1[s1.isin(s2)]\n\ns3 = df2.query(\"state not in @common_states\")\ns3.loc[:, 'state'].unique()\n```\n\n::: {.cell-output .cell-output-display execution_count=156}\n```\narray(['District of Columbia', 'Guam', 'Mariana Islands', 'Puerto Rico',\n       'Virgin Islands'], dtype=object)\n```\n:::\n:::\n\n\nThese territories are part of the commonwealth of the United States but are not part of the mainland.\n\n::: {.cell execution_count=157}\n``` {.python .cell-code}\n# creating 'total' column\ndf2['total'] = df2['handgun'] + df2['long_gun'] + df2['multiple']\n```\n:::\n\n\n::: {.cell execution_count=158}\n``` {.python .cell-code}\n# aggregating df2 on the gun sales columns\ndf2_agg = df2.groupby('state')[['handgun','long_gun','multiple', 'total']].sum()\ndf2_agg\n```\n\n::: {.cell-output .cell-output-display execution_count=158}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>total</th>\n    </tr>\n    <tr>\n      <th>state</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Alabama</th>\n      <td>168435.3</td>\n      <td>134159.3</td>\n      <td>13090</td>\n      <td>315684.6</td>\n    </tr>\n    <tr>\n      <th>Alaska</th>\n      <td>41240.1</td>\n      <td>40575.7</td>\n      <td>4632</td>\n      <td>86447.8</td>\n    </tr>\n    <tr>\n      <th>Arizona</th>\n      <td>183462.4</td>\n      <td>119886.8</td>\n      <td>15816</td>\n      <td>319165.2</td>\n    </tr>\n    <tr>\n      <th>Arkansas</th>\n      <td>88268.4</td>\n      <td>90332.0</td>\n      <td>8800</td>\n      <td>187400.4</td>\n    </tr>\n    <tr>\n      <th>California</th>\n      <td>616390.5</td>\n      <td>610005.0</td>\n      <td>0</td>\n      <td>1226395.5</td>\n    </tr>\n    <tr>\n      <th>Colorado</th>\n      <td>266752.2</td>\n      <td>198028.6</td>\n      <td>28586</td>\n      <td>493366.8</td>\n    </tr>\n    <tr>\n      <th>Connecticut</th>\n      <td>134612.5</td>\n      <td>48194.3</td>\n      <td>0</td>\n      <td>182806.8</td>\n    </tr>\n    <tr>\n      <th>Delaware</th>\n      <td>28131.4</td>\n      <td>23920.6</td>\n      <td>2068</td>\n      <td>54120.0</td>\n    </tr>\n    <tr>\n      <th>District of Columbia</th>\n      <td>742.5</td>\n      <td>52.8</td>\n      <td>16</td>\n      <td>811.3</td>\n    </tr>\n    <tr>\n      <th>Florida</th>\n      <td>728538.8</td>\n      <td>347855.2</td>\n      <td>50284</td>\n      <td>1126678.0</td>\n    </tr>\n    <tr>\n      <th>Georgia</th>\n      <td>214280.0</td>\n      <td>141104.7</td>\n      <td>14956</td>\n      <td>370340.7</td>\n    </tr>\n    <tr>\n      <th>Guam</th>\n      <td>1373.9</td>\n      <td>726.0</td>\n      <td>134</td>\n      <td>2233.9</td>\n    </tr>\n    <tr>\n      <th>Hawaii</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Idaho</th>\n      <td>51175.3</td>\n      <td>61150.1</td>\n      <td>4812</td>\n      <td>117137.4</td>\n    </tr>\n    <tr>\n      <th>Illinois</th>\n      <td>387652.1</td>\n      <td>194980.5</td>\n      <td>24266</td>\n      <td>606898.6</td>\n    </tr>\n    <tr>\n      <th>Indiana</th>\n      <td>306000.2</td>\n      <td>194939.8</td>\n      <td>18164</td>\n      <td>519104.0</td>\n    </tr>\n    <tr>\n      <th>Iowa</th>\n      <td>3069.0</td>\n      <td>38779.4</td>\n      <td>140</td>\n      <td>41988.4</td>\n    </tr>\n    <tr>\n      <th>Kansas</th>\n      <td>89227.6</td>\n      <td>81122.8</td>\n      <td>8542</td>\n      <td>178892.4</td>\n    </tr>\n    <tr>\n      <th>Kentucky</th>\n      <td>154793.1</td>\n      <td>119933.0</td>\n      <td>13886</td>\n      <td>288612.1</td>\n    </tr>\n    <tr>\n      <th>Louisiana</th>\n      <td>188746.8</td>\n      <td>153034.2</td>\n      <td>17218</td>\n      <td>358999.0</td>\n    </tr>\n    <tr>\n      <th>Maine</th>\n      <td>53729.5</td>\n      <td>51458.0</td>\n      <td>4916</td>\n      <td>110103.5</td>\n    </tr>\n    <tr>\n      <th>Mariana Islands</th>\n      <td>0.0</td>\n      <td>17.6</td>\n      <td>0</td>\n      <td>17.6</td>\n    </tr>\n    <tr>\n      <th>Maryland</th>\n      <td>57535.5</td>\n      <td>79081.2</td>\n      <td>674</td>\n      <td>137290.7</td>\n    </tr>\n    <tr>\n      <th>Massachusetts</th>\n      <td>83574.7</td>\n      <td>46124.1</td>\n      <td>4960</td>\n      <td>134658.8</td>\n    </tr>\n    <tr>\n      <th>Michigan</th>\n      <td>181365.8</td>\n      <td>141997.9</td>\n      <td>5630</td>\n      <td>328993.7</td>\n    </tr>\n    <tr>\n      <th>Minnesota</th>\n      <td>147358.2</td>\n      <td>157897.3</td>\n      <td>10092</td>\n      <td>315347.5</td>\n    </tr>\n    <tr>\n      <th>Mississippi</th>\n      <td>130955.0</td>\n      <td>102104.2</td>\n      <td>10526</td>\n      <td>243585.2</td>\n    </tr>\n    <tr>\n      <th>Missouri</th>\n      <td>302229.4</td>\n      <td>222978.8</td>\n      <td>25506</td>\n      <td>550714.2</td>\n    </tr>\n    <tr>\n      <th>Montana</th>\n      <td>41301.7</td>\n      <td>62517.4</td>\n      <td>5356</td>\n      <td>109175.1</td>\n    </tr>\n    <tr>\n      <th>Nebraska</th>\n      <td>1888.7</td>\n      <td>29143.4</td>\n      <td>164</td>\n      <td>31196.1</td>\n    </tr>\n    <tr>\n      <th>Nevada</th>\n      <td>72773.8</td>\n      <td>41915.5</td>\n      <td>7446</td>\n      <td>122135.3</td>\n    </tr>\n    <tr>\n      <th>New Hampshire</th>\n      <td>75381.9</td>\n      <td>49149.1</td>\n      <td>110</td>\n      <td>124641.0</td>\n    </tr>\n    <tr>\n      <th>New Jersey</th>\n      <td>77273.9</td>\n      <td>54008.9</td>\n      <td>0</td>\n      <td>131282.8</td>\n    </tr>\n    <tr>\n      <th>New Mexico</th>\n      <td>76377.4</td>\n      <td>61230.4</td>\n      <td>7464</td>\n      <td>145071.8</td>\n    </tr>\n    <tr>\n      <th>New York</th>\n      <td>146613.5</td>\n      <td>217437.0</td>\n      <td>4932</td>\n      <td>368982.5</td>\n    </tr>\n    <tr>\n      <th>North Carolina</th>\n      <td>18254.5</td>\n      <td>194610.9</td>\n      <td>5624</td>\n      <td>218489.4</td>\n    </tr>\n    <tr>\n      <th>North Dakota</th>\n      <td>21972.5</td>\n      <td>37414.3</td>\n      <td>1944</td>\n      <td>61330.8</td>\n    </tr>\n    <tr>\n      <th>Ohio</th>\n      <td>434027.0</td>\n      <td>268359.3</td>\n      <td>32666</td>\n      <td>735052.3</td>\n    </tr>\n    <tr>\n      <th>Oklahoma</th>\n      <td>182799.1</td>\n      <td>143565.4</td>\n      <td>21322</td>\n      <td>347686.5</td>\n    </tr>\n    <tr>\n      <th>Oregon</th>\n      <td>196587.6</td>\n      <td>157331.9</td>\n      <td>0</td>\n      <td>353919.5</td>\n    </tr>\n    <tr>\n      <th>Pennsylvania</th>\n      <td>706455.2</td>\n      <td>173955.1</td>\n      <td>0</td>\n      <td>880410.3</td>\n    </tr>\n    <tr>\n      <th>Puerto Rico</th>\n      <td>14056.9</td>\n      <td>2657.6</td>\n      <td>550</td>\n      <td>17264.5</td>\n    </tr>\n    <tr>\n      <th>Rhode Island</th>\n      <td>15688.2</td>\n      <td>11224.4</td>\n      <td>3998</td>\n      <td>30910.6</td>\n    </tr>\n    <tr>\n      <th>South Carolina</th>\n      <td>145720.3</td>\n      <td>96154.3</td>\n      <td>8980</td>\n      <td>250854.6</td>\n    </tr>\n    <tr>\n      <th>South Dakota</th>\n      <td>40172.0</td>\n      <td>54474.2</td>\n      <td>4368</td>\n      <td>99014.2</td>\n    </tr>\n    <tr>\n      <th>Tennessee</th>\n      <td>351085.9</td>\n      <td>231177.1</td>\n      <td>22184</td>\n      <td>604447.0</td>\n    </tr>\n    <tr>\n      <th>Texas</th>\n      <td>701223.6</td>\n      <td>529769.9</td>\n      <td>66204</td>\n      <td>1297197.5</td>\n    </tr>\n    <tr>\n      <th>Utah</th>\n      <td>52141.1</td>\n      <td>59546.3</td>\n      <td>2382</td>\n      <td>114069.4</td>\n    </tr>\n    <tr>\n      <th>Vermont</th>\n      <td>20152.0</td>\n      <td>20738.3</td>\n      <td>1770</td>\n      <td>42660.3</td>\n    </tr>\n    <tr>\n      <th>Virgin Islands</th>\n      <td>292.6</td>\n      <td>62.7</td>\n      <td>10</td>\n      <td>365.3</td>\n    </tr>\n    <tr>\n      <th>Virginia</th>\n      <td>325559.3</td>\n      <td>230972.5</td>\n      <td>0</td>\n      <td>556531.8</td>\n    </tr>\n    <tr>\n      <th>Washington</th>\n      <td>235516.6</td>\n      <td>166131.9</td>\n      <td>16056</td>\n      <td>417704.5</td>\n    </tr>\n    <tr>\n      <th>West Virginia</th>\n      <td>101336.4</td>\n      <td>89215.5</td>\n      <td>10566</td>\n      <td>201117.9</td>\n    </tr>\n    <tr>\n      <th>Wisconsin</th>\n      <td>204930.0</td>\n      <td>175762.4</td>\n      <td>1046</td>\n      <td>381738.4</td>\n    </tr>\n    <tr>\n      <th>Wyoming</th>\n      <td>24825.9</td>\n      <td>28396.5</td>\n      <td>2590</td>\n      <td>55812.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nMerging on df1’s state column\n\n::: {.cell execution_count=159}\n``` {.python .cell-code}\nmerged_df = df2_agg.merge(df1, on='state', how='inner')\nmerged_df.head(20)\n```\n\n::: {.cell-output .cell-output-display execution_count=159}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>total</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>...</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>168435.3</td>\n      <td>134159.3</td>\n      <td>13090</td>\n      <td>315684.6</td>\n      <td>4863300.0</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>...</td>\n      <td>10.7</td>\n      <td>61.3</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>17.1</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>41240.1</td>\n      <td>40575.7</td>\n      <td>4632</td>\n      <td>86447.8</td>\n      <td>741894.0</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>...</td>\n      <td>15.5</td>\n      <td>64.4</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>9.9</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>183462.4</td>\n      <td>119886.8</td>\n      <td>15816</td>\n      <td>319165.2</td>\n      <td>6931071.0</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>...</td>\n      <td>11.9</td>\n      <td>59.6</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>16.4</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>88268.4</td>\n      <td>90332.0</td>\n      <td>8800</td>\n      <td>187400.4</td>\n      <td>2988248.0</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>...</td>\n      <td>9.3</td>\n      <td>60.1</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>17.2</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>616390.5</td>\n      <td>610005.0</td>\n      <td>0</td>\n      <td>1226395.5</td>\n      <td>39250017.0</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>...</td>\n      <td>8.3</td>\n      <td>63.2</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>14.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>3548449.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Colorado</td>\n      <td>266752.2</td>\n      <td>198028.6</td>\n      <td>28586</td>\n      <td>493366.8</td>\n      <td>5540545.0</td>\n      <td>49.7</td>\n      <td>87.5</td>\n      <td>4.5</td>\n      <td>3.3</td>\n      <td>...</td>\n      <td>8.6</td>\n      <td>63.8</td>\n      <td>90.7</td>\n      <td>38.1</td>\n      <td>247800.0</td>\n      <td>1002.0</td>\n      <td>11.0</td>\n      <td>60629.0</td>\n      <td>32217.0</td>\n      <td>547352.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Connecticut</td>\n      <td>134612.5</td>\n      <td>48194.3</td>\n      <td>0</td>\n      <td>182806.8</td>\n      <td>3576452.0</td>\n      <td>51.2</td>\n      <td>80.6</td>\n      <td>11.8</td>\n      <td>4.7</td>\n      <td>...</td>\n      <td>5.7</td>\n      <td>62.8</td>\n      <td>89.9</td>\n      <td>37.6</td>\n      <td>270500.0</td>\n      <td>1075.0</td>\n      <td>9.8</td>\n      <td>70331.0</td>\n      <td>38803.0</td>\n      <td>326693.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Delaware</td>\n      <td>28131.4</td>\n      <td>23920.6</td>\n      <td>2068</td>\n      <td>54120.0</td>\n      <td>952065.0</td>\n      <td>51.6</td>\n      <td>70.1</td>\n      <td>22.6</td>\n      <td>4.0</td>\n      <td>...</td>\n      <td>6.6</td>\n      <td>61.0</td>\n      <td>88.4</td>\n      <td>30.0</td>\n      <td>231500.0</td>\n      <td>1018.0</td>\n      <td>11.7</td>\n      <td>60509.0</td>\n      <td>30554.0</td>\n      <td>73418.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Florida</td>\n      <td>728538.8</td>\n      <td>347855.2</td>\n      <td>50284</td>\n      <td>1126678.0</td>\n      <td>20612439.0</td>\n      <td>51.1</td>\n      <td>77.6</td>\n      <td>16.8</td>\n      <td>2.9</td>\n      <td>...</td>\n      <td>15.3</td>\n      <td>60.0</td>\n      <td>86.9</td>\n      <td>27.3</td>\n      <td>159000.0</td>\n      <td>1002.0</td>\n      <td>14.7</td>\n      <td>47507.0</td>\n      <td>26829.0</td>\n      <td>2100187.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Georgia</td>\n      <td>214280.0</td>\n      <td>141104.7</td>\n      <td>14956</td>\n      <td>370340.7</td>\n      <td>10310371.0</td>\n      <td>51.3</td>\n      <td>61.2</td>\n      <td>32.0</td>\n      <td>4.1</td>\n      <td>...</td>\n      <td>14.8</td>\n      <td>62.5</td>\n      <td>85.4</td>\n      <td>28.8</td>\n      <td>148100.0</td>\n      <td>879.0</td>\n      <td>16.0</td>\n      <td>49620.0</td>\n      <td>25737.0</td>\n      <td>929864.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Hawaii</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1428557.0</td>\n      <td>49.8</td>\n      <td>25.8</td>\n      <td>2.2</td>\n      <td>37.7</td>\n      <td>...</td>\n      <td>4.2</td>\n      <td>61.3</td>\n      <td>91.0</td>\n      <td>30.8</td>\n      <td>515300.0</td>\n      <td>1438.0</td>\n      <td>9.3</td>\n      <td>69515.0</td>\n      <td>29822.0</td>\n      <td>118454.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Idaho</td>\n      <td>51175.3</td>\n      <td>61150.1</td>\n      <td>4812</td>\n      <td>117137.4</td>\n      <td>1683140.0</td>\n      <td>49.9</td>\n      <td>93.3</td>\n      <td>0.8</td>\n      <td>1.5</td>\n      <td>...</td>\n      <td>11.8</td>\n      <td>58.9</td>\n      <td>89.5</td>\n      <td>25.9</td>\n      <td>162900.0</td>\n      <td>743.0</td>\n      <td>14.4</td>\n      <td>47583.0</td>\n      <td>23399.0</td>\n      <td>146642.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Illinois</td>\n      <td>387652.1</td>\n      <td>194980.5</td>\n      <td>24266</td>\n      <td>606898.6</td>\n      <td>12801539.0</td>\n      <td>50.9</td>\n      <td>77.2</td>\n      <td>14.7</td>\n      <td>5.5</td>\n      <td>...</td>\n      <td>7.4</td>\n      <td>62.5</td>\n      <td>87.9</td>\n      <td>32.3</td>\n      <td>173800.0</td>\n      <td>907.0</td>\n      <td>13.0</td>\n      <td>57574.0</td>\n      <td>30494.0</td>\n      <td>1135017.0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Indiana</td>\n      <td>306000.2</td>\n      <td>194939.8</td>\n      <td>18164</td>\n      <td>519104.0</td>\n      <td>6633053.0</td>\n      <td>50.7</td>\n      <td>85.6</td>\n      <td>9.7</td>\n      <td>2.2</td>\n      <td>...</td>\n      <td>9.4</td>\n      <td>61.3</td>\n      <td>87.8</td>\n      <td>24.1</td>\n      <td>124200.0</td>\n      <td>745.0</td>\n      <td>14.1</td>\n      <td>49255.0</td>\n      <td>25346.0</td>\n      <td>479059.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Iowa</td>\n      <td>3069.0</td>\n      <td>38779.4</td>\n      <td>140</td>\n      <td>41988.4</td>\n      <td>3134693.0</td>\n      <td>50.3</td>\n      <td>91.4</td>\n      <td>3.7</td>\n      <td>2.5</td>\n      <td>...</td>\n      <td>5.0</td>\n      <td>60.3</td>\n      <td>91.5</td>\n      <td>26.7</td>\n      <td>129200.0</td>\n      <td>697.0</td>\n      <td>11.8</td>\n      <td>53183.0</td>\n      <td>27950.0</td>\n      <td>259121.0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Kansas</td>\n      <td>89227.6</td>\n      <td>81122.8</td>\n      <td>8542</td>\n      <td>178892.4</td>\n      <td>2907289.0</td>\n      <td>50.2</td>\n      <td>86.6</td>\n      <td>6.2</td>\n      <td>3.0</td>\n      <td>...</td>\n      <td>10.1</td>\n      <td>60.4</td>\n      <td>90.2</td>\n      <td>31.0</td>\n      <td>132000.0</td>\n      <td>757.0</td>\n      <td>12.1</td>\n      <td>52205.0</td>\n      <td>27706.0</td>\n      <td>239118.0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Kentucky</td>\n      <td>154793.1</td>\n      <td>119933.0</td>\n      <td>13886</td>\n      <td>288612.1</td>\n      <td>4436974.0</td>\n      <td>50.7</td>\n      <td>88.0</td>\n      <td>8.3</td>\n      <td>1.5</td>\n      <td>...</td>\n      <td>6.0</td>\n      <td>61.6</td>\n      <td>84.2</td>\n      <td>22.3</td>\n      <td>123200.0</td>\n      <td>675.0</td>\n      <td>18.5</td>\n      <td>43740.0</td>\n      <td>24063.0</td>\n      <td>331546.0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Louisiana</td>\n      <td>188746.8</td>\n      <td>153034.2</td>\n      <td>17218</td>\n      <td>358999.0</td>\n      <td>4681666.0</td>\n      <td>51.1</td>\n      <td>63.2</td>\n      <td>32.6</td>\n      <td>1.8</td>\n      <td>...</td>\n      <td>11.9</td>\n      <td>61.8</td>\n      <td>83.4</td>\n      <td>22.5</td>\n      <td>144100.0</td>\n      <td>788.0</td>\n      <td>20.2</td>\n      <td>45047.0</td>\n      <td>24981.0</td>\n      <td>414291.0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Maine</td>\n      <td>53729.5</td>\n      <td>51458.0</td>\n      <td>4916</td>\n      <td>110103.5</td>\n      <td>1331479.0</td>\n      <td>51.0</td>\n      <td>94.8</td>\n      <td>1.5</td>\n      <td>1.2</td>\n      <td>...</td>\n      <td>9.9</td>\n      <td>61.5</td>\n      <td>91.6</td>\n      <td>29.0</td>\n      <td>173800.0</td>\n      <td>777.0</td>\n      <td>12.5</td>\n      <td>49331.0</td>\n      <td>27655.0</td>\n      <td>139570.0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Maryland</td>\n      <td>57535.5</td>\n      <td>79081.2</td>\n      <td>674</td>\n      <td>137290.7</td>\n      <td>6016447.0</td>\n      <td>51.6</td>\n      <td>59.3</td>\n      <td>30.7</td>\n      <td>6.6</td>\n      <td>...</td>\n      <td>7.0</td>\n      <td>63.0</td>\n      <td>89.4</td>\n      <td>37.9</td>\n      <td>286900.0</td>\n      <td>1230.0</td>\n      <td>9.7</td>\n      <td>74551.0</td>\n      <td>36897.0</td>\n      <td>531953.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>20 rows × 21 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=160}\n``` {.python .cell-code}\n# checking for nans throughout the dataframe\nmerged_df.isnull().sum().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=160}\n```\n0\n```\n:::\n:::\n\n\n::: {.cell execution_count=161}\n``` {.python .cell-code}\nmerged_df.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 50 entries, 0 to 49\nData columns (total 21 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   state                    50 non-null     object \n 1   handgun                  50 non-null     float64\n 2   long_gun                 50 non-null     float64\n 3   multiple                 50 non-null     int64  \n 4   total                    50 non-null     float64\n 5   pop_2016                 50 non-null     float64\n 6   female_pct               50 non-null     float64\n 7   white_pct                50 non-null     float64\n 8   black_pct                50 non-null     float64\n 9   asian_pct                50 non-null     float64\n 10  pe_hh                    50 non-null     float64\n 11  pe_whi                   50 non-null     float64\n 12  adults_below_65          50 non-null     float64\n 13  high_school_grad_higher  50 non-null     float64\n 14  bsc_higher               50 non-null     float64\n 15  median_hu                50 non-null     float64\n 16  median_gross_rent        50 non-null     float64\n 17  poverty_pct              50 non-null     float64\n 18  median_hh_income         50 non-null     float64\n 19  per_cap_inc              50 non-null     float64\n 20  firms                    50 non-null     float64\ndtypes: float64(19), int64(1), object(1)\nmemory usage: 8.3+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=162}\n``` {.python .cell-code}\nmerged_df.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=162}\n```\n(50, 21)\n```\n:::\n:::\n\n\n::: {.cell execution_count=163}\n``` {.python .cell-code}\n# saving for later\nmerged_df.to_csv('Data/merged_cleaned_data.csv', index=False)\n```\n:::\n\n\n## Exploratory Data Analysis(Univariate)\n\n*(Merged dataframe)*\n\n### Let’s explore the first 5 columns, representing the gun sales data\n\n::: {.cell execution_count=164}\n``` {.python .cell-code}\nmerged_df = pd.read_csv('Data/merged_cleaned_data.csv')\nmerged_df.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=164}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>state</th>\n      <th>handgun</th>\n      <th>long_gun</th>\n      <th>multiple</th>\n      <th>total</th>\n      <th>pop_2016</th>\n      <th>female_pct</th>\n      <th>white_pct</th>\n      <th>black_pct</th>\n      <th>asian_pct</th>\n      <th>...</th>\n      <th>pe_whi</th>\n      <th>adults_below_65</th>\n      <th>high_school_grad_higher</th>\n      <th>bsc_higher</th>\n      <th>median_hu</th>\n      <th>median_gross_rent</th>\n      <th>poverty_pct</th>\n      <th>median_hh_income</th>\n      <th>per_cap_inc</th>\n      <th>firms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alabama</td>\n      <td>168435.3</td>\n      <td>134159.3</td>\n      <td>13090</td>\n      <td>315684.6</td>\n      <td>4863300.0</td>\n      <td>51.6</td>\n      <td>69.3</td>\n      <td>26.8</td>\n      <td>1.4</td>\n      <td>...</td>\n      <td>10.7</td>\n      <td>61.3</td>\n      <td>84.3</td>\n      <td>23.5</td>\n      <td>125500.0</td>\n      <td>717.0</td>\n      <td>17.1</td>\n      <td>43623.0</td>\n      <td>24091.0</td>\n      <td>374153.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Alaska</td>\n      <td>41240.1</td>\n      <td>40575.7</td>\n      <td>4632</td>\n      <td>86447.8</td>\n      <td>741894.0</td>\n      <td>47.7</td>\n      <td>66.1</td>\n      <td>3.8</td>\n      <td>6.3</td>\n      <td>...</td>\n      <td>15.5</td>\n      <td>64.4</td>\n      <td>92.1</td>\n      <td>28.0</td>\n      <td>250000.0</td>\n      <td>1146.0</td>\n      <td>9.9</td>\n      <td>72515.0</td>\n      <td>33413.0</td>\n      <td>68032.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Arizona</td>\n      <td>183462.4</td>\n      <td>119886.8</td>\n      <td>15816</td>\n      <td>319165.2</td>\n      <td>6931071.0</td>\n      <td>50.3</td>\n      <td>83.3</td>\n      <td>4.9</td>\n      <td>3.4</td>\n      <td>...</td>\n      <td>11.9</td>\n      <td>59.6</td>\n      <td>86.0</td>\n      <td>27.5</td>\n      <td>167500.0</td>\n      <td>913.0</td>\n      <td>16.4</td>\n      <td>50255.0</td>\n      <td>25848.0</td>\n      <td>499926.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Arkansas</td>\n      <td>88268.4</td>\n      <td>90332.0</td>\n      <td>8800</td>\n      <td>187400.4</td>\n      <td>2988248.0</td>\n      <td>50.9</td>\n      <td>79.4</td>\n      <td>15.7</td>\n      <td>1.6</td>\n      <td>...</td>\n      <td>9.3</td>\n      <td>60.1</td>\n      <td>84.8</td>\n      <td>21.1</td>\n      <td>111400.0</td>\n      <td>677.0</td>\n      <td>17.2</td>\n      <td>41371.0</td>\n      <td>22798.0</td>\n      <td>231959.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>California</td>\n      <td>616390.5</td>\n      <td>610005.0</td>\n      <td>0</td>\n      <td>1226395.5</td>\n      <td>39250017.0</td>\n      <td>50.3</td>\n      <td>72.7</td>\n      <td>6.5</td>\n      <td>14.8</td>\n      <td>...</td>\n      <td>8.3</td>\n      <td>63.2</td>\n      <td>81.8</td>\n      <td>31.4</td>\n      <td>385500.0</td>\n      <td>1255.0</td>\n      <td>14.3</td>\n      <td>61818.0</td>\n      <td>30318.0</td>\n      <td>3548449.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 21 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=165}\n``` {.python .cell-code}\nmerged_df.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 50 entries, 0 to 49\nData columns (total 21 columns):\n #   Column                   Non-Null Count  Dtype  \n---  ------                   --------------  -----  \n 0   state                    50 non-null     object \n 1   handgun                  50 non-null     float64\n 2   long_gun                 50 non-null     float64\n 3   multiple                 50 non-null     int64  \n 4   total                    50 non-null     float64\n 5   pop_2016                 50 non-null     float64\n 6   female_pct               50 non-null     float64\n 7   white_pct                50 non-null     float64\n 8   black_pct                50 non-null     float64\n 9   asian_pct                50 non-null     float64\n 10  pe_hh                    50 non-null     float64\n 11  pe_whi                   50 non-null     float64\n 12  adults_below_65          50 non-null     float64\n 13  high_school_grad_higher  50 non-null     float64\n 14  bsc_higher               50 non-null     float64\n 15  median_hu                50 non-null     float64\n 16  median_gross_rent        50 non-null     float64\n 17  poverty_pct              50 non-null     float64\n 18  median_hh_income         50 non-null     float64\n 19  per_cap_inc              50 non-null     float64\n 20  firms                    50 non-null     float64\ndtypes: float64(19), int64(1), object(1)\nmemory usage: 8.3+ KB\n```\n:::\n:::\n\n\n::: {.cell execution_count=166}\n``` {.python .cell-code}\n# plotting\nsns.set_style('whitegrid')\nfig, (ax1, ax2, ax3, ax4) = plt.subplots(1, 4, figsize=(20,4))\n\n\nmerged_df.handgun.hist(bins=20, ax=ax1)\nmerged_df.long_gun.hist(bins=20, ax=ax2)\nmerged_df.multiple.hist(bins=20, ax=ax3)\nmerged_df.total.hist(bins=20, ax=ax4)\n\nax1.set(title='Distribution of Handgun Sales')\nax2.set(title='Distribution of Long-gun Sales')\nax3.set(title='Distribution of Multiple Sales')\nax4.set(title='Distribution of Total Sales')\n\nsns.despine(right=True)\nsns.despine(offset=0, trim=False)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-167-output-1.png){width=1524 height=372}\n:::\n:::\n\n\n::: {.cell execution_count=167}\n``` {.python .cell-code}\n# summary statistics\nmerged_df[['handgun', 'long_gun', 'multiple', 'total']].describe().T\n```\n\n::: {.cell-output .cell-output-display execution_count=167}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>handgun</th>\n      <td>50.0</td>\n      <td>177551.638</td>\n      <td>185945.395696</td>\n      <td>0.0</td>\n      <td>51416.750</td>\n      <td>132783.75</td>\n      <td>211942.500</td>\n      <td>728538.8</td>\n    </tr>\n    <tr>\n      <th>long_gun</th>\n      <td>50.0</td>\n      <td>131676.908</td>\n      <td>118931.726762</td>\n      <td>0.0</td>\n      <td>49726.325</td>\n      <td>99129.25</td>\n      <td>175310.575</td>\n      <td>610005.0</td>\n    </tr>\n    <tr>\n      <th>multiple</th>\n      <td>50.0</td>\n      <td>10294.720</td>\n      <td>13047.318153</td>\n      <td>0.0</td>\n      <td>1813.500</td>\n      <td>5490.00</td>\n      <td>14688.500</td>\n      <td>66204.0</td>\n    </tr>\n    <tr>\n      <th>total</th>\n      <td>50.0</td>\n      <td>319523.266</td>\n      <td>302625.048243</td>\n      <td>0.0</td>\n      <td>114836.400</td>\n      <td>231037.30</td>\n      <td>378888.975</td>\n      <td>1297197.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nAs expected with data regarding sales, the data is heavily right-skewed; with most of gun sales on the low end, evidenced by the mean being greater than the median.\n\n### Let’s explore the next 5 columns, representing the population % by race\n\n::: {.cell execution_count=168}\n``` {.python .cell-code}\nsns.set_style('whitegrid')\nfig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(1, 5, figsize=(20,4))\n\n\nmerged_df.pop_2016.hist(bins=20, ax=ax1)\nmerged_df.female_pct.hist(bins=20, ax=ax2)\nmerged_df.black_pct.hist(bins=20, ax=ax3)\nmerged_df.white_pct.hist(bins=20, ax=ax4)\nmerged_df.asian_pct.hist(bins=20, ax=ax5)\n\nax1.set(title='Distribution of the Whole Population')\nax2.set(title='Distribution of the % Female Population')\nax3.set(title='Distribution of the % Black Population')\nax4.set(title='Distribution of the %  White Population')\nax5.set(title='Distribution of the % Asian Population')\n\nsns.despine(right=True)\nsns.despine(offset=0, trim=False)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-169-output-1.png){width=1537 height=372}\n:::\n:::\n\n\n### Let’s explore the next 5 columns, representing levels of education and persons per household and persons without health insurance\n\n::: {.cell execution_count=169}\n``` {.python .cell-code}\nsns.set_style('whitegrid')\nfig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(1, 5, figsize=(20,4))\n\n\nmerged_df. pe_hh.hist(bins=20, ax=ax1)\nmerged_df.pe_whi.hist(bins=20, ax=ax2)\nmerged_df.adults_below_65.hist(bins=20, ax=ax3)\nmerged_df.high_school_grad_higher.hist(bins=20, ax=ax4)\nmerged_df.bsc_higher.hist(bins=20, ax=ax5)\n\nax1.set(title='count of persons per household')\nax2.set(title='count of persons without health insurance')\nax3.set(title='adult population below 65')\nax4.set(title='High School Graduates or Higher')\nax5.set(title='Bachelor Degree Holders or Higher')\n\nsns.despine(right=True)\nsns.despine(offset=0, trim=False)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-170-output-1.png){width=1531 height=356}\n:::\n:::\n\n\n### Let’s explore the next 6 columns, representing economic data\n\n::: {.cell execution_count=170}\n``` {.python .cell-code}\nsns.set_style('whitegrid')\nfig, (ax1, ax2, ax3, ax4, ax5, ax6) = plt.subplots(1, 6, figsize=(20,4))\n\n\nmerged_df.median_hu.hist(bins=20, ax=ax1)\nmerged_df.median_gross_rent.hist(bins=20, ax=ax2)\nmerged_df.poverty_pct .hist(bins=20, ax=ax3)\nmerged_df.median_hh_income.hist(bins=20, ax=ax4)\nmerged_df.per_cap_inc.hist(bins=20, ax=ax5)\nmerged_df.firms.hist(bins=20, ax=ax6)\n\nax1.set(title='Housing Units Value')\nax2.set(title='Median Gross Rent')\nax3.set(title='% Persons in Poverty')\nax4.set(title='Median Household Income')\nax5.set(title='Per Capita Income')\nax6.set(title='All firms')\n\nsns.despine(right=True)\nsns.despine(offset=0, trim=False)\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-171-output-1.png){width=1531 height=372}\n:::\n:::\n\n\n## **Covariate Analysis**\n\nI want to create a new calculated column: `gun_sales_per_capita`, which would be derived from the division of total gun sales by state populations. This would provide a more appropriate baseline for the comparison of gun sales between states\n\n::: {.cell execution_count=171}\n``` {.python .cell-code}\nmerged_df['gun_sales_per_capita'] = merged_df['total'] / merged_df['pop_2016']\n```\n:::\n\n\n::: {.cell execution_count=172}\n``` {.python .cell-code}\nmerged_df['gun_sales_per_capita'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=172}\n```\ncount    50.000000\nmean      0.060184\nstd       0.028694\nmin       0.000000\n25%       0.038424\n50%       0.063000\n75%       0.081355\nmax       0.116523\nName: gun_sales_per_capita, dtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=173}\n``` {.python .cell-code}\n# getting the correlations with gun per capita\n\nmerged_df.drop(columns=\"state\").corrwith(other=merged_df['gun_sales_per_capita'])\n```\n\n::: {.cell-output .cell-output-display execution_count=173}\n```\nhandgun                    0.029506\nlong_gun                  -0.056207\nmultiple                   0.122681\ntotal                      0.001330\npop_2016                  -0.335466\nfemale_pct                -0.384595\nwhite_pct                  0.382182\nblack_pct                 -0.223373\nasian_pct                 -0.492825\npe_hh                     -0.386078\npe_whi                     0.275326\nadults_below_65            0.103166\nhigh_school_grad_higher    0.147886\nbsc_higher                -0.356364\nmedian_hu                 -0.408704\nmedian_gross_rent         -0.462526\npoverty_pct                0.169764\nmedian_hh_income          -0.319988\nper_cap_inc               -0.260645\nfirms                     -0.337613\ngun_sales_per_capita       1.000000\ndtype: float64\n```\n:::\n:::\n\n\n::: {.cell execution_count=174}\n``` {.python .cell-code}\n# visualizing the correlations\n\nfig, ax = plt.subplots(figsize=(15, 15))\ncorr = merged_df.drop(columns=\"state\").corr()\n\nmask = np.zeros_like(corr, dtype=bool)\nmask[np.triu_indices_from(mask)] = True\n\nsns.heatmap(corr, mask=mask, fmt=\".2f\", annot=True, ax=ax,\n            cmap=\"RdBu\", vmin=-1, vmax=1, square=True)\n```\n\n::: {.cell-output .cell-output-display execution_count=174}\n```\n<Axes: >\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-175-output-2.png){width=1225 height=1184}\n:::\n:::\n\n\n### **Plotting the variables against `gun_sales_per_capita` to spot associations**\n\n::: {.cell execution_count=175}\n``` {.python .cell-code}\nsns.pairplot(merged_df, x_vars=['pop_2016', 'female_pct', 'white_pct', 'black_pct', 'asian_pct'], y_vars=['gun_sales_per_capita'], kind='reg')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-176-output-1.png){width=1181 height=241}\n:::\n:::\n\n\n::: {.cell execution_count=176}\n``` {.python .cell-code}\nsns.pairplot(merged_df, x_vars=['pe_hh', 'pe_whi','adults_below_65', 'high_school_grad_higher', 'bsc_higher'], y_vars=['gun_sales_per_capita'], kind='reg')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-177-output-1.png){width=1181 height=241}\n:::\n:::\n\n\n::: {.cell execution_count=177}\n``` {.python .cell-code}\nsns.pairplot(merged_df, x_vars=['median_hu', 'median_gross_rent','poverty_pct', 'median_hh_income', 'per_cap_inc', 'firms'], y_vars=['gun_sales_per_capita'], kind='reg')\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-178-output-1.png){width=1417 height=241}\n:::\n:::\n\n\n*Which census data is most associated with high gun sales per capita*\n\n| Variable                                      | Positive/Negative Correlation |\n|:------------------------------------------|:----------------------------|\n| persons per household (pe_hh)                 | negative                      |\n| persons without health insurance (pe_whi)     | positive                      |\n| bachelor degree holder or higher (bsc_higher) | negative                      |\n| median housing unit costs (median_hu)         | negative                      |\n| median gross rent                             | negative                      |\n\n## Conclusions\n\n*Caveats!*\\\n**The findings of these analysis are summarised below. These are tentative and do indicate any causal relationship between variables.**\n\n> -   *The most populous states in the United States in 2016 are California, Texas, Florida, New York and Illinois.*\n>\n> -   *The least populous states are Wyoming, Vermont, Alaska, North Dakota and South Dakota.*\n\n> -   *States with the highest median household income in 2016 are Maryland, Alaska, New Jersey, Connecticut and Hawaii.*\n>\n> -   *States with the lowest median household income in 2016 are Mississippi, Arkankas, West Virginia, Alabama, and Kentucky.*\n\n> -   *States with the highest black population in 2016 are Mississippi, Louisiana, Georgia, Maryland and South Carolina.*\n>\n> -   *States with the lowest black population in 2016 are Montana, Idaho, Vermont, Wyoming and Utah.*\n\n### **2006**\n\n> -   *Long guns were sold the most in 2006 with about 5,268,550 units sold.*\n\n> -   *In 2006, handgun sales varied between 200 thousand and 300 thousand units throughout the year. However, long-gun sales started strongly at around 400 thousand units in January, started sinking in March till a year-low of just below 300 thousand units before dramatically shooting up to about 800 thousand units at the end of the year*\n\n> -   *The top 5 states in terms of gun sales are Texas, Pennsylvania, California, Florida and Ohio.*\n\n> -   *Among these states, only in Florida were handgun sales greater than long-gun sales.*\n\n> -   *All these states experience a remarkable dip in sales in the middle of the year.*\n\n### **2015**\n\n> *9 years later in 2015, handguns became most bought gun types with a total of about 8 million units sold across all states in the U.S.*\n\n> *The same trend of a dip in sales around the middle of the year and a sharp rise in purchases towards the end of the year persists.*\n\n> *Texas remains the top state in terms of gun purchases.*\n\n### **2016**\n\n> *A year later in 2016, total gun sales reached a little short of 16 million units. Handguns led the way at more than 8 million units.*\n\n> *Gun sales started relatively high compared to the previous years. I note the double dip in sales with second dip occuring around September. This double dip was mostly prominent in Florida. Another trend of note is that long-gun sales almost superceded handgun sales country-wise in November.*\n\n> *Texas, California, Florida, Pennsylvania and Ohio remains the top states in terms of gun purchases*\n\n> -   *Guam, Illinois, New Jersey, Connecticut and Massachusetts show the highest percentage increase in gun sales over the span of a decade (2006 - 2016). Hawaii, Mariana Islands, Iowa and Nebraska actually had gun sales reduced.*\n\n> -   *Gun sales per capita is weakly negatively correlated with `persons per household`; `persons without health insurance` (positive); `bachelor degree holder or higher` (negative)*; *`median housing unit costs` (negative)*; *`median gross rent` (negative)*\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}